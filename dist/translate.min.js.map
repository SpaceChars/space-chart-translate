{"version":3,"file":"translate.min.js","sources":["../lib/http/adapter.ts","../lib/engines/deeplx.ts","../lib/http/nodeHttpAdpater.ts","../lib/core/engine.ts","../plugins/vue/index.ts","../lib/core/translate.ts"],"sourcesContent":["import XHRAdapter from './xhrAdapter';\nimport NodeHttpAdapter from './nodeHttpAdpater'\n\n/**\n * 请求方法\n */\nexport enum HttpClientRequestMethod {\n  GET = 'GET',\n  POST = 'POST'\n}\n\nexport interface HttpClientRequestDefaultOption {\n  timeout?: number\n}\n\n/**\n * 请求体配置属性\n */\nexport interface HttpClientRequestOption extends HttpClientRequestDefaultOption {\n  url?: string\n  method?: HttpClientRequestMethod | string\n  headers?: { [name: string]: string }\n  params?: any\n  data?: any\n}\n\n/**\n * 错误响应属性\n */\nexport interface HtptClientResponseError {\n  message?: string\n  code?: number | string\n}\n\n/**\n * 正常响应属性\n */\nexport interface HtptClientResponseOption<T> extends HtptClientResponseError {\n  data: T | null\n}\n\nexport interface IHttpAdapter {\n  send<T>(options: HttpClientRequestOption): Promise<HtptClientResponseOption<T>>\n}\n\n/**\n * 请求客户端接口\n */\ninterface IHttpClient {\n  get<T>(url: string, params?: any, options?: HttpClientRequestOption): Promise<HtptClientResponseOption<T>>\n  post<T>(url: string, data?: any, options?: HttpClientRequestOption): Promise<HtptClientResponseOption<T>>\n  request<T>(options: HttpClientRequestOption): Promise<HtptClientResponseOption<T>>\n\n}\n\nexport class HttpClientInstance implements IHttpClient {\n  private defaultOption: HttpClientRequestOption\n\n  constructor(options: HttpClientRequestOption) {\n    this.defaultOption = options\n  }\n\n  get<T>(url: string, params?: any, options?: HttpClientRequestOption | undefined): Promise<HtptClientResponseOption<T>> {\n    return this.request<T>(Object.assign(this.defaultOption, options, { url, method: HttpClientRequestMethod.GET, params }))\n  }\n\n  post<T>(url: string, data?: any, options?: HttpClientRequestOption | undefined): Promise<HtptClientResponseOption<T>> {\n    return this.request<T>(Object.assign(this.defaultOption, options, { url, method: HttpClientRequestMethod.POST, data }))\n  }\n\n  request<T>(options: HttpClientRequestOption): Promise<HtptClientResponseOption<T>> {\n    // const adapter = typeof XMLHttpRequest !== 'undefined' ? new XHRAdapter() : new NodeHttpAdapter();\n    const adapter = new NodeHttpAdapter();\n    return adapter.send<T>(Object.assign(this.defaultOption, options))\n  }\n}\n\nexport class HttpClient {\n  static create(options: HttpClientRequestDefaultOption): HttpClientInstance {\n    return new HttpClientInstance(options)\n  }\n}\n\nexport default HttpClient","import { ITranslateEngine, LanguageMapItemInfo, TranslateConfigOption, TranslateDefaultConfiguraOption, TranslateResponseOption } from \"../core/engine\";\nimport { HttpClient, HttpClientInstance } from \"../http/adapter\";\n\nexport enum DeeplxLanguage {\n  ZH = 'ZH',\n  EN = 'EN'\n}\n\nexport interface DeeplxDefaultConfiguraOption extends TranslateDefaultConfiguraOption {\n  url: string\n  authorization: string\n  timeout?: number\n}\n\nexport class DeeplxTranslateEngine implements ITranslateEngine {\n\n  private src;\n  private target;\n  private languageMap;\n\n  private url;\n  private authorization;\n  private http: HttpClientInstance;\n\n  constructor(options: DeeplxDefaultConfiguraOption) {\n\n    if (!options.url) {\n      throw new Error('The deeplx translation address cannot be emptry')\n    }\n\n    if (!options.authorization) {\n      throw new Error('The deeplx request token cannot be emptry')\n    }\n\n    if (!options.src) {\n      throw new Error('The source language cannot be emptry')\n    }\n\n    if (!options.target) {\n      throw new Error('The target language cannot be emptry')\n    }\n\n    this.src = options.src || DeeplxLanguage.ZH\n    this.target = options.target || DeeplxLanguage.EN\n    this.languageMap = options.languageMap || {}\n\n    this.url = options.url;\n    this.authorization = options.authorization;\n    this.http = HttpClient.create({\n      timeout: options.timeout\n    })\n  }\n\n  /**\n   * 根据配置信息获取本地语言映射表映射标识\n   * @param options 配置信息\n   * @returns \n   */\n  private getLocalTranslateLanguageMapKeyByOption(options: TranslateConfigOption): string {\n    return `${options.src || this.src}-${options.target || this.target}`;\n  }\n\n  /**\n   * 根据key获取本地语言映射表信息\n   * @param key 映射标识 格式：[srcource language]-[target language]\n   * @returns \n   */\n  private getLocalTranslateLanguageMapInfoByKey(key: string): Array<LanguageMapItemInfo> {\n    return (this.languageMap[key] || []).sort((v1, v2) => {\n      const width1 = v1.weight == undefined ? 0 : v1.weight\n      const width2 = v2.weight == undefined ? 0 : v2.weight\n      return width2 - width1;\n    })\n  }\n\n  /**\n   * 发送翻译请求\n   * @param text 需要翻译的文本\n   * @param src 源语言\n   * @param target 目标语言\n   * @returns \n   */\n  private requestTranslate(text: string, src: DeeplxLanguage | string, target: DeeplxLanguage | string) {\n    return this.http.post<TranslateResponseOption>(this.url,\n      {\n        \"text\": text,\n        \"source_lang\": src || this.src,\n        \"target_lang\": target || this.target\n      }, {\n      headers: {\n        'Authorization': this.authorization\n      }\n    })\n  }\n\n  /**\n   * 根据本地语言映射表标记原始文本\n   * @param localLanguageMapInfo \n   * @param info \n   * @returns \n   */\n  encodeTranslateMapping(localLanguageMapInfo: Array<LanguageMapItemInfo>, info: TranslateConfigOption): TranslateConfigOption {\n\n    info = JSON.parse(JSON.stringify(info));\n    let text = info.text || '';\n\n    localLanguageMapInfo.forEach((map, index) => {\n      text = text.replace(map.src, '${' + index + '}')\n    })\n\n    info.text = text;\n    return info;\n  }\n\n\n  /**\n   * 根据本地语言映射表解析翻译结果\n   * @param key 映射标识\n   * @param responseText 翻译响应结果文本\n   * @returns \n   */\n  decodeTranslateMapping(localLanguageMapInfo: Array<LanguageMapItemInfo>, responseText: string): string {\n    localLanguageMapInfo.forEach((item, index) => {\n      responseText = responseText.replace('${' + index + '}', item.target)\n    })\n    return responseText;\n  }\n\n  /**\n   * 单个翻译\n   * @param options \n   */\n  singleTranslate(options: TranslateConfigOption): Promise<TranslateResponseOption> {\n    return new Promise((resolve, reject) => {\n\n      //是否是需要忽略翻译的文本\n      const ignore = options.text == null || options.text == undefined || options.text.length <= 0 || !Number.isNaN(Number(options.text))\n      if (ignore) {\n        return resolve({\n          alternatives: null,\n          data: options.text || '',\n          id: options.id,\n          success: false\n        })\n      }\n\n      const targetLanguageMapInfo = this.getLocalTranslateLanguageMapInfoByKey(this.getLocalTranslateLanguageMapKeyByOption(options))\n\n      const _options = this.encodeTranslateMapping(targetLanguageMapInfo, options)\n\n      this.requestTranslate(_options.text || '', _options.src, _options.target).then((res) => {\n        resolve(res.code == 200 && res.data?.data ? {\n          alternatives: (res.data || {}).alternatives || null,\n          data: this.decodeTranslateMapping(targetLanguageMapInfo, res.data?.data || ''),\n          id: options.id || '',\n          success: true\n        } : {\n          alternatives: null,\n          data: options.text || '',\n          id: options.id || '',\n          success: false\n        }\n        )\n\n      })\n    })\n  }\n\n  /**\n   * 批量翻译\n   * @param options \n   */\n  branchTranslate(options: Array<TranslateConfigOption>): Promise<Array<TranslateResponseOption>> {\n\n    return new Promise((resolve, reject) => {\n\n      const requestList: Array<TranslateResponseOption> = []\n\n      Promise.all(options.map(info => this.singleTranslate(info))).then((res) => {\n        requestList.push(...res)\n      }).finally(() => {\n        resolve(requestList)\n      })\n\n    })\n\n  }\n\n\n  /**\n   * \n   * @param options Translation Configura Option\n   * @returns If options dont instance of array,or options length is one return `Pormise<TranslateResponseOption>`,\n   * otherwise return `Promise<Array<TranslateResponseOption>>` type\n   * \n   */\n  translate(options: TranslateConfigOption | Array<TranslateConfigOption>): Promise<TranslateResponseOption> | Promise<Array<TranslateResponseOption>> {\n    return !(options instanceof Array) ? this.singleTranslate(options) : options.length == 1 ? this.singleTranslate(options[0]) : this.branchTranslate(options)\n  }\n\n}\n\nexport default {}","import * as http from 'http'\nimport { Buffer } from 'buffer';\nimport { HtptClientResponseOption, HttpClientRequestMethod, HttpClientRequestOption, IHttpAdapter } from './adapter';\n\nexport default class NodeHttpAdapter implements IHttpAdapter {\n\n  send<T>(options: HttpClientRequestOption): Promise<HtptClientResponseOption<T>> {\n    return new Promise<HtptClientResponseOption<T>>((resolve, reject) => {\n\n      if (!options.url) {\n        return reject({\n          mesage: 'The request url is empty'\n        })\n      }\n\n      if (!options.method) {\n        return reject({\n          mesage: 'The request method is empty'\n        })\n      }\n\n      const urlInfo = new URL(URL.canParse(options.url) ? options.url : window.location.origin + options.url);\n\n      const _options = Object.assign(options, {\n        hostname: urlInfo.hostname || window.location.hostname,\n        port: urlInfo.port || 80,\n        path: urlInfo.pathname + urlInfo.search || '',\n      })\n\n      delete _options.url;\n\n      //创建请求示例\n      const _h = http.request(\n        _options,\n        (res: any) => {\n          //设置响应编码\n          res.setEncoding('utf8');\n\n          //监听数据响应\n          let _data: any;\n          res.on('data', (chunk: any) => {\n\n            if (!_data) return _data = chunk;\n            _data instanceof Buffer ? (_data.includes(chunk)) : (_data += chunk)\n\n          })\n\n          //监听响应结束\n          res.on('end', () => {\n\n            if ((res.headers['content-type'] || '').indexOf('application/json') >= 0) _data = JSON.parse(_data.toString() || '')\n\n            resolve({\n              code: res.statusCode || 500,\n              message: res.statusMessage,\n              data: _data\n            })\n          })\n\n\n        }\n      );\n\n      //错误拦截\n      _h.on('error', (e: any) => {\n        reject({\n          message: e.message\n        })\n      })\n\n      //添加内容到body\n      if (options.method == HttpClientRequestMethod.POST) {\n        _h.write(JSON.stringify(options.data))\n      }\n\n      //设置超时时间\n      if (!Number.isInteger(options.timeout) || Number(options.timeout) > 0) {\n        _h.setTimeout(options.timeout || 60000, () => {\n          reject({\n            message: 'time out'\n          })\n        })\n      }\n\n\n      //结束写入\n      _h.end();\n\n    });\n  }\n\n}","\nimport HttpClient, { HtptClientResponseOption, HttpClientInstance } from '../http/adapter'\n\n/**\n * 语言词典库——单项词典信息\n */\nexport interface LanguageMapItemInfo {\n  src: string\n  target: string\n  weight?: number\n}\n\n/**\n * 默认翻译语言配置\n */\nexport interface TranslateDefaultConfiguraOption {\n  src: string\n  target: string\n  languageMap?: { [name: string]: Array<LanguageMapItemInfo> }\n}\n\n/**\n * 翻译配置\n */\nexport interface TranslateConfigOption extends TranslateDefaultConfiguraOption {\n  text?: string\n  id: string | number\n}\n\n/**\n * 翻译响应信息\n */\nexport interface TranslateResponseOption {\n  alternatives: Array<string> | null\n  data: string\n  id: string | number\n  success: Boolean\n}\n\n/**\n * 翻译引擎接口类\n */\nexport interface ITranslateEngine {\n  translate(options: TranslateConfigOption | Array<TranslateConfigOption>): Promise<TranslateResponseOption> | Promise<Array<TranslateResponseOption>>;\n  singleTranslate(options: TranslateConfigOption): Promise<TranslateResponseOption>\n  branchTranslate(options: Array<TranslateConfigOption>): Promise<Array<TranslateResponseOption>>\n}\n\nexport class TranslateEngineInstance implements ITranslateEngine {\n  private _engine: ITranslateEngine;\n\n  constructor(enine: ITranslateEngine) {\n    this._engine = enine\n  }\n\n  singleTranslate(options: TranslateConfigOption): Promise<TranslateResponseOption> {\n    return this._engine.singleTranslate(options)\n  }\n  \n  branchTranslate(options: TranslateConfigOption[]): Promise<TranslateResponseOption[]> {\n    return this._engine.branchTranslate(options)\n  }\n\n  translate(options: TranslateConfigOption | TranslateConfigOption[]): Promise<TranslateResponseOption> | Promise<TranslateResponseOption[]> {\n    return this._engine.translate(options)\n  }\n\n}","import { LanguageMapItemInfo, TranslateConfigOption, TranslateEngineInstance } from '../../lib/core/engine';\nimport { PluginDefaultConfiguraOption } from '../index';\n\n/**\n * translation queue item options\n */\ninterface TranslationQueueItemOption {\n  text: string\n  src?: string\n  target?: string\n  languageMap?: { [name: string]: Array<LanguageMapItemInfo> },\n  translate: boolean\n  el: HTMLElement\n}\n\ninterface TranslateRequestQueueItemOption {\n  src: TranslationQueueItemOption\n  encodeText: string\n}\n\n/**\n * translation queue\n */\n\nclass TranslationQueue {\n  private _waitingQueue: Array<TranslationQueueItemOption> = [];//waiting queue\n  private _requestQueue: Array<TranslationQueueItemOption> = [];//request queue\n  \n  private _engine: TranslateEngineInstance;\n  private _timer: NodeJS.Timeout | null = null;\n\n  constructor(engine: TranslateEngineInstance) {\n    this._engine = engine\n  }\n\n  /**\n   * added translation queue item\n   * @param options one or more queue options\n   * @returns \n   */\n  add(...options: Array<TranslationQueueItemOption>) {\n\n    this._waitingQueue.push(...options)\n\n    if (this._timer != null) clearTimeout(this._timer);\n    this._timer = setTimeout(() => {\n      this._requestQueue = this._waitingQueue;\n      this._waitingQueue = [];\n      this.request()\n    }, 200)\n  }\n\n  request() {\n\n    const requestList: Array<TranslateConfigOption> = []\n\n    const requestQueue: Array<TranslateRequestQueueItemOption> = this._requestQueue.map((info, i1) => {\n\n      let _t = info.text;\n\n      [...info.text.matchAll(/>(.*?)</g)].reduce((addIndex, rex: any, i2) => {\n\n        const id = `{${i1}_${i2}}`,\n\n          startIndex = addIndex + (rex.index || 0) + 1,\n          endIndex = rex[1].length + startIndex;\n\n        _t = _t.substring(0, startIndex) + id + _t.substring(endIndex, _t.length)\n\n        requestList.push({\n          id: `${i1}_${i2}`,\n          text: rex[1],\n          src: info.src || '',\n          target: info.target || '',\n          languageMap: info.languageMap\n        })\n\n        return addIndex - (rex[1].length - id.length)\n      }, 0)\n\n      return {\n        src: info,\n        encodeText: _t,\n      }\n\n    })\n\n    this._engine.branchTranslate(requestList).then(res => {\n\n      console.log('----res', res);\n\n\n      res.forEach(info => {\n        const ids = (info.id as string).split('_');\n        requestQueue[Number(ids[0])].encodeText = requestQueue[Number(ids[0])].encodeText.replace(`{${info.id}}`, info.data)\n      })\n\n      requestQueue.forEach(info => {\n        info.src.el.innerHTML = info.encodeText\n      })\n\n    })\n  }\n\n  /**\n   * By node element remove queue items \n   * Only remove queues with element  `request` option set to false or undefined\n   * @param el node element\n   */\n  remove(el: HTMLElement | Node) {\n    this._waitingQueue = (this._waitingQueue || []).filter(info => info.el == el)\n  }\n}\n\nlet queue: TranslationQueue;\n\nclass TranslateVuePlugin {\n\n  private _engine: TranslateEngineInstance\n\n  constructor(options: PluginDefaultConfiguraOption) {\n    if (!options.engine) {\n      throw new Error('The translation engine connot be emptry')\n    }\n\n    this._engine = new TranslateEngineInstance(options.engine);\n  }\n\n  initQueue() {\n    queue = new TranslationQueue(this._engine)\n  }\n\n  /**\n   * registe `v-nottranslate` directive\n   * @returns vue directive options\n   */\n  regsiteNotTranslateDirective() {\n    return {\n\n      /**\n       * v2.0 指令绑定到元素时\n       * @param el \n       * @param binding \n       * @param vnode \n       * @param prevVnode \n       */\n      bind(el: HTMLElement, binding: any, vnode: any, prevVnode: any) {\n        el.setAttribute('not-translate', 'true')\n        queue.add({\n          el,\n          text: el.outerHTML,\n          translate: false\n        })\n      },\n      /**\n       * v2.0 所在组件的 VNode 更新时调用，但是可能发生在其子 VNode 更新之前\n       * @param el \n       * @param binding \n       * @param vnode \n       * @param prevVnode \n       */\n      componentUpdated(el: HTMLElement, binding: any, vnode: any, prevVnode: any) {\n        if (!el.getAttribute('not-translate')) {\n          el.setAttribute('not-translate', 'true')\n          queue.add({\n            el,\n            text: el.outerHTML,\n            translate: false,\n          })\n        }\n      },\n      /**\n       * v3.0 在绑定元素的父组,及他自己的所有子节点都挂载完成后调用\n       * @param el \n       * @param binding \n       * @param vnode \n       * @param prevVnode \n       */\n      mounted(el: HTMLElement, binding: any, vnode: any, prevVnode: any) {\n        el.setAttribute('not-translate', 'true')\n        queue.add({\n          el,\n          text: el.outerHTML,\n          translate: false,\n        })\n\n      },\n      /**\n       * v3.0 在绑定元素的父组件,及他自己的所有子节点都更新后调用\n       * @param el \n       * @param binding \n       * @param vnode \n       * @param prevVnode \n       */\n      updated(el: HTMLElement, binding: any, vnode: any, prevVnode: any) {\n        if (!el.getAttribute('not-translate')) {\n          el.setAttribute('not-translate', 'true')\n          queue.add({\n            el,\n            text: el.outerHTML,\n            translate: false,\n          })\n        }\n      },\n    }\n  }\n\n  /**\n   * registe `v-translate` directive\n   * @returns vue directive options\n   */\n  retaiteTranslateDirective() {\n    return {\n      /**\n       * [v2.0] 指令绑定到元素时\n       * @param el \n       * @param binding \n       * @param vnode \n       * @param prevVnode \n       */\n      bind: (el: HTMLElement, binding: any, vnode: any, prevVnode: any) => {\n        queue.add({\n          el,\n          text: el.outerHTML,\n          translate: true,\n          ...(binding.value || {})\n        })\n      },\n      /**\n       * [v2.0] 子组件和组件都更新完成时\n       * @param el \n       * @param binding \n       * @param vnode \n       * @param prevVnode \n       */\n      update: (el: HTMLElement, binding: any, vnode: any, prevVnode: any) => {\n        queue.add({\n          el,\n          text: el.outerHTML,\n          translate: true,\n          ...(binding.value || {})\n        })\n      },\n      /**\n       * [v2.0] 指令与元素解绑时调用\n       * @param el \n       */\n      unbind: (el: HTMLElement) => {\n        queue.remove(el)\n      },\n      /**\n       * [v3.0] 在绑定元素的父组,及他自己的所有子节点都挂载完成后调用\n       * @param el \n       * @param binding \n       * @param vnode \n       * @param prevVnode \n       */\n      mounted: (el: HTMLElement, binding: any, vnode: any, prevVnode: any) => {\n        queue.add({\n          el,\n          text: el.outerHTML,\n          translate: true,\n          ...(binding.value || {})\n        })\n      },\n      /**\n       * [v3.0] 在绑定元素的父组件,及他自己的所有子节点都更新后调用\n       * @param el \n       * @param binding \n       * @param vnode \n       * @param prevVnode \n       */\n      updated: (el: HTMLElement, binding: any, vnode: any, prevVnode: any) => {\n        queue.add({\n          el,\n          text: el.outerHTML,\n          translate: true,\n          ...(binding.value || {})\n        })\n      },\n      /**\n       * [v3.0] 绑定元素的父组件卸载前调用\n       * @param el \n       * @param binding \n       * @param vnode \n       * @param prevVnode \n       */\n      beforeUnmount: (el: HTMLElement, binding: any, vnode: any, prevVnode: any) => {\n        queue.remove(el)\n      },\n    }\n  }\n\n}\n\n\nexport default {\n  install(app: any, options: PluginDefaultConfiguraOption) {\n\n    const plugin = new TranslateVuePlugin(options)\n    plugin.initQueue()\n\n    app.directive('translate', plugin.retaiteTranslateDirective())\n    app.directive('nottranslate', plugin.regsiteNotTranslateDirective())\n\n  }\n}","// this module should only have a default export\nimport { DeeplxTranslateEngine, DeeplxLanguage } from '../engines/index'\n\nimport TranslateVuePlugin from '../../plugins/vue/index'\n\nexport default {\n  DeeplxTranslateEngine,\n  DeeplxLanguage,\n  TranslateVuePlugin\n}"],"names":["HttpClientRequestMethod","DeeplxLanguage","NodeHttpAdapter","send","options","Promise","resolve","reject","url","mesage","method","urlInfo","URL","canParse","window","location","origin","_options","Object","assign","hostname","port","path","pathname","search","_h","http.request","res","_data","setEncoding","on","chunk","Buffer","includes","headers","indexOf","JSON","parse","toString","code","statusCode","message","statusMessage","data","e","POST","write","stringify","Number","isInteger","timeout","setTimeout","end","HttpClientInstance","constructor","this","defaultOption","get","params","request","GET","post","HttpClient","create","TranslateEngineInstance","enine","_engine","singleTranslate","branchTranslate","translate","TranslationQueue","engine","_waitingQueue","_requestQueue","_timer","add","push","clearTimeout","requestList","requestQueue","map","info","i1","_t","text","matchAll","reduce","addIndex","rex","i2","id","startIndex","index","endIndex","length","substring","src","target","languageMap","encodeText","then","console","log","forEach","ids","split","replace","el","innerHTML","remove","filter","queue","TranslateVuePlugin","Error","initQueue","regsiteNotTranslateDirective","bind","binding","vnode","prevVnode","setAttribute","outerHTML","componentUpdated","getAttribute","mounted","updated","retaiteTranslateDirective","value","update","unbind","beforeUnmount","TranslateVuePlugin$1","install","app","plugin","directive","DeeplxTranslateEngine","authorization","ZH","EN","http","getLocalTranslateLanguageMapKeyByOption","getLocalTranslateLanguageMapInfoByKey","key","sort","v1","v2","width1","undefined","weight","requestTranslate","source_lang","target_lang","Authorization","encodeTranslateMapping","localLanguageMapInfo","decodeTranslateMapping","responseText","item","isNaN","alternatives","success","targetLanguageMapInfo","_a","_b","all","finally","Array"],"mappings":"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"}