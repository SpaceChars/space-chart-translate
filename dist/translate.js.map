{"version":3,"file":"translate.js","sources":["../lib/http/xhrAdapter.ts","../lib/http/nodeHttpAdpater.ts","../lib/http/adapter.ts","../lib/core/engine.ts","../platform/vue/index.ts","../lib/core/translate.ts"],"sourcesContent":["import { HtptClientResponseOption, HttpClientRequestOption, IHttpAdapter } from \"./adapter\";\n\nexport default class XHRAdapter implements IHttpAdapter {\n\n  send<T>(options: HttpClientRequestOption): Promise<HtptClientResponseOption<T>> {\n    return new Promise<HtptClientResponseOption<T>>((resolve, reject) => {\n      reject({})\n    })\n  }\n\n}","import * as http from 'http'\nimport { Buffer } from 'buffer';\nimport { HtptClientResponseOption, HttpClientRequestMethod, HttpClientRequestOption, IHttpAdapter } from './adapter';\n\nexport default class NodeHttpAdapter implements IHttpAdapter {\n\n  send<T>(options: HttpClientRequestOption): Promise<HtptClientResponseOption<T>> {\n    return new Promise<HtptClientResponseOption<T>>((resolve, reject) => {\n\n      if (!options.url) {\n        return reject({\n          mesage: 'The request url is empty'\n        })\n      }\n\n      if (!options.method) {\n        return reject({\n          mesage: 'The request method is empty'\n        })\n      }\n\n      const urlInfo = new URL(options.url);\n\n      const _options = Object.assign(options, {\n        hostname: urlInfo.hostname || window.location.hostname || '127.0.0.1',\n        port: urlInfo.port || 80,\n        path: urlInfo.pathname + urlInfo.search || ''\n      })\n\n      delete _options.url;\n\n      //创建请求示例\n      const _h = http.request(\n        _options,\n        (res: any) => {\n          //设置响应编码\n          res.setEncoding('utf8');\n\n          //监听数据响应\n          let _data: any;\n          res.on('data', (chunk: any) => {\n\n            if (!_data) return _data = chunk;\n            _data instanceof Buffer ? (_data.includes(chunk)) : (_data += chunk)\n\n          })\n\n          //监听响应结束\n          res.on('end', () => {\n\n            if ((res.headers['content-type'] || '').indexOf('application/json') >= 0) _data = JSON.parse(_data.toString() || '')\n\n            resolve({\n              code: res.statusCode || 500,\n              message: res.statusMessage,\n              data: _data\n            })\n          })\n\n\n        }\n      );\n\n      //错误拦截\n      _h.on('error', (e: any) => {\n        reject({\n          message: e.message\n        })\n      })\n\n      //添加内容到body\n      if (options.method == HttpClientRequestMethod.POST) {\n        _h.write(JSON.stringify(options.data))\n      }\n\n      //设置超时时间\n      if (!Number.isInteger(options.timeout) || Number(options.timeout) > 0) {\n        _h.setTimeout(options.timeout || 60000, () => {\n          reject({\n            message: 'time out'\n          })\n        })\n      }\n\n\n      //结束写入\n      _h.end();\n\n    });\n  }\n\n}","import XHRAdapter from './xhrAdapter';\nimport NodeHttpAdapter from './nodeHttpAdpater'\n\n/**\n * 请求方法\n */\nexport enum HttpClientRequestMethod {\n  GET = 'get',\n  POST = 'post'\n}\n\nexport interface HttpClientRequestDefaultOption {\n  timeout?: number\n}\n\n/**\n * 请求体配置属性\n */\nexport interface HttpClientRequestOption extends HttpClientRequestDefaultOption {\n  url?: string\n  method?: HttpClientRequestMethod | string\n  headers?: { [name: string]: string }\n  params?: any\n  data?: any\n}\n\n/**\n * 错误响应属性\n */\nexport interface HtptClientResponseError {\n  message?: string\n  code?: number | string\n}\n\n/**\n * 正常响应属性\n */\nexport interface HtptClientResponseOption<T> extends HtptClientResponseError {\n  data: T | null\n}\n\nexport interface IHttpAdapter {\n  send<T>(options: HttpClientRequestOption): Promise<HtptClientResponseOption<T>>\n}\n\n/**\n * 请求客户端接口\n */\ninterface IHttpClient {\n  get<T>(url: string, params?: any, options?: HttpClientRequestOption): Promise<HtptClientResponseOption<T>>\n  post<T>(url: string, data?: any, options?: HttpClientRequestOption): Promise<HtptClientResponseOption<T>>\n  request<T>(options: HttpClientRequestOption): Promise<HtptClientResponseOption<T>>\n\n}\n\nexport class HttpClientInstance implements IHttpClient {\n  private defaultOption: HttpClientRequestOption\n\n  constructor(options: HttpClientRequestOption) {\n    this.defaultOption = options\n  }\n\n  get<T>(url: string, params?: any, options?: HttpClientRequestOption | undefined): Promise<HtptClientResponseOption<T>> {\n    return this.request<T>(Object.assign(this.defaultOption, options, { url, method: HttpClientRequestMethod.GET, params }))\n  }\n\n  post<T>(url: string, data?: any, options?: HttpClientRequestOption | undefined): Promise<HtptClientResponseOption<T>> {\n    return this.request<T>(Object.assign(this.defaultOption, options, { url, method: HttpClientRequestMethod.POST, data }))\n  }\n\n  request<T>(options: HttpClientRequestOption): Promise<HtptClientResponseOption<T>> {\n    const adapter = typeof XMLHttpRequest !== 'undefined' ? new XHRAdapter() : new NodeHttpAdapter();\n    return adapter.send<T>(Object.assign(this.defaultOption, options))\n  }\n}\n\nexport class HttpClient {\n  create(options: HttpClientRequestDefaultOption): HttpClientInstance {\n    return new HttpClientInstance(options)\n  }\n}\n\nexport default new HttpClient()","\nimport HttpClient, { HtptClientResponseOption, HttpClientInstance } from '../http/adapter'\n\n/**\n * 翻译语言\n */\nexport enum TranslationLanguage {\n  ZH = 'ZH',\n  EN = 'EN',\n}\n\n/**\n * 语言词典库——单项词典信息\n */\nexport interface LanguageMapItemInfo {\n  src: string\n  target: string\n  weight?: number\n}\n\n/**\n * 默认翻译语言配置\n */\nexport interface TranslateConfigLanguageDefaultOption {\n  src: TranslationLanguage | string\n  target: TranslationLanguage | string\n  languageMap?: { [name: TranslationLanguage | string]: Array<LanguageMapItemInfo> }\n}\n\nexport interface TranslateConfigDefaultOption extends TranslateConfigLanguageDefaultOption {\n  host: string\n  authorization: string\n  timeout?: number\n}\n\n/**\n * 翻译配置\n */\nexport interface TranslateConfigOption extends TranslateConfigLanguageDefaultOption {\n  text?: string\n  id: string | number\n}\n\n/**\n * 翻译响应信息\n */\nexport interface TranslateResponseOption {\n  alternatives: Array<string> | null\n  data: string\n  id: string | number\n  success: Boolean\n}\n\n/**\n * 翻译引擎接口类\n */\nexport interface ITranslateEngine {\n  translate(options: TranslateConfigOption | Array<TranslateConfigOption>): Promise<TranslateResponseOption> | Promise<Array<TranslateResponseOption>>;\n}\n\n/**\n * 翻译引擎\n */\nexport class TranslateEngine implements ITranslateEngine {\n\n  private src;\n  private target;\n  private languageMap;\n\n  private host;\n  private authorization;\n  private http: HttpClientInstance;\n\n  constructor(options: TranslateConfigDefaultOption) {\n\n    if (!options.host) {\n      throw new Error('The deeplx host address cannot be emptry')\n    }\n\n    if (!options.authorization) {\n      throw new Error('The deeplx request token cannot be emptry')\n    }\n\n    if (!options.src) {\n      throw new Error('The source language cannot be emptry')\n    }\n\n    if (!options.target) {\n      throw new Error('The target language cannot be emptry')\n    }\n\n    this.src = options.src || TranslationLanguage.ZH\n    this.target = options.target || TranslationLanguage.EN\n    this.languageMap = options.languageMap || {}\n\n    this.host = options.host;\n    this.authorization = options.authorization;\n    this.http = HttpClient.create({\n      timeout: options.timeout\n    })\n  }\n\n  /**\n   * 根据配置信息获取本地语言映射表映射标识\n   * @param options 配置信息\n   * @returns \n   */\n  private getLocalTranslateLanguageMapKeyByOption(options: TranslateConfigOption): string {\n    return `${options.src || this.src}-${options.target || this.target}`;\n  }\n\n  /**\n   * 根据key获取本地语言映射表信息\n   * @param key 映射标识 格式：[srcource language]-[target language]\n   * @returns \n   */\n  private getLocalTranslateLanguageMapInfoByKey(key: string): Array<LanguageMapItemInfo> {\n    return (this.languageMap[key] || []).sort((v1, v2) => {\n      const width1 = v1.weight == undefined ? 0 : v1.weight\n      const width2 = v2.weight == undefined ? 0 : v2.weight\n      return width2 - width1;\n    })\n  }\n\n  /**\n   * 发送翻译请求\n   * @param text 需要翻译的文本\n   * @param src 源语言\n   * @param target 目标语言\n   * @returns \n   */\n  private requestTranslate(text: string, src: TranslationLanguage | string, target: TranslationLanguage | string) {\n    return this.http.post<TranslateResponseOption>(this.host + '/translate',\n      {\n        \"text\": text,\n        \"source_language\": src || this.src,\n        \"target_language\": target || this.target\n      }, {\n      headers: {\n        'Authorization': this.authorization\n      }\n    })\n  }\n\n  /**\n   * 根据本地语言映射表标记原始文本\n   * @param localLanguageMapInfo \n   * @param info \n   * @returns \n   */\n  encodeTranslateMapping(localLanguageMapInfo: Array<LanguageMapItemInfo>, info: TranslateConfigOption): TranslateConfigOption {\n\n    info = JSON.parse(JSON.stringify(info));\n    let text = info.text || '';\n\n    localLanguageMapInfo.forEach((map, index) => {\n      text = text.replace(map.src, '${' + index + '}')\n    })\n\n    info.text = text;\n    return info;\n  }\n\n\n  /**\n   * 根据本地语言映射表解析翻译结果\n   * @param key 映射标识\n   * @param responseText 翻译响应结果文本\n   * @returns \n   */\n  decodeTranslateMapping(localLanguageMapInfo: Array<LanguageMapItemInfo>, responseText: string): string {\n    localLanguageMapInfo.forEach((item, index) => {\n      responseText = responseText.replace('${' + index + '}', item.target)\n    })\n    return responseText;\n  }\n\n  /**\n   * 单个翻译\n   * @param options \n   */\n  singleTranslate(options: TranslateConfigOption): Promise<TranslateResponseOption> {\n    return new Promise((resolve, reject) => {\n\n      const targetLanguageMapInfo = this.getLocalTranslateLanguageMapInfoByKey(this.getLocalTranslateLanguageMapKeyByOption(options))\n\n      const _options = this.encodeTranslateMapping(targetLanguageMapInfo, options)\n\n      this.requestTranslate(_options.text || '', _options.src, _options.target).then((res) => {\n        resolve(res.code == 200 ? {\n          alternatives: (res.data || {}).alternatives || null,\n          data: this.decodeTranslateMapping(targetLanguageMapInfo, res.data?.data || ''),\n          id: options.id || '',\n          success: true\n        } : {\n          alternatives: null,\n          data: options.text || '',\n          id: options.id || '',\n          success: false\n        }\n        )\n\n      })\n    })\n  }\n\n  /**\n   * 批量翻译\n   * @param options \n   */\n  branchTranslate(options: Array<TranslateConfigOption>): Promise<Array<TranslateResponseOption>> {\n\n    return new Promise((resolve, reject) => {\n\n      // 按源语言和目标语言进行分组\n      const translateGroup: { [name: string]: Array<TranslateConfigOption> } = {};\n\n      options.forEach((option, index) => {\n\n        const key = this.getLocalTranslateLanguageMapKeyByOption(option)\n\n        const info: Array<TranslateConfigOption> = translateGroup[key] || [];\n        info.push(option)\n\n        translateGroup[key] = info;\n      })\n\n      //By language group Translate\n      Promise.all(Object.keys(translateGroup).map(key => {\n\n        const language = key.split('-');\n\n        const targetLanguageMapInfo = this.getLocalTranslateLanguageMapInfoByKey(key)\n\n        const encodeTranslateInfo = translateGroup[key].map(item => this.encodeTranslateMapping(targetLanguageMapInfo, item))\n\n        let translateSrcText = JSON.stringify(encodeTranslateInfo.map(item => item.text));\n\n        this.requestTranslate(translateSrcText, language[0], language[1]).then((res) => {\n\n          if (res.code == 200) {\n\n            resolve(JSON.parse(res.data?.data || '[]').map((v: string, i: number) => {\n              const info = encodeTranslateInfo[i];\n              return {\n                alternatives: (res.data || {}).alternatives || null,\n                data: this.decodeTranslateMapping(targetLanguageMapInfo, v),\n                id: info.id,\n                success: true\n              }\n            }))\n          } else {\n            resolve(translateGroup[key].map(info => {\n              return {\n                alternatives: null,\n                data: info.text || '',\n                id: info.id,\n                success: false\n              }\n            })\n            )\n          }\n        })\n      }))\n    })\n\n  }\n\n\n  /**\n   * \n   * @param options Translation Configura Option\n   * @returns If options dont instance of array,or options length is one return `Pormise<TranslateResponseOption>`,\n   * otherwise return `Promise<Array<TranslateResponseOption>>` type\n   * \n   */\n  translate(options: TranslateConfigOption | Array<TranslateConfigOption>): Promise<TranslateResponseOption> | Promise<Array<TranslateResponseOption>> {\n    return !(options instanceof Array) ? this.singleTranslate(options) : options.length == 1 ? this.singleTranslate(options[0]) : this.branchTranslate(options)\n  }\n\n}\n\nexport default TranslateEngine","import { TranslateEngine, TranslateConfigDefaultOption, TranslationLanguage } from '../../lib/core/engine';\n\nclass TranslateVuePlugin {\n\n  private engine: TranslateEngine\n\n  constructor(options: TranslateConfigDefaultOption) {\n    this.engine = new TranslateEngine(options)\n  }\n\n  translateVUE2() {\n    return {\n      bind(el: HTMLElement, binding: any, vnode: any, prevVnode: any) {\n        console.log('----vue2-bind', el, binding, vnode, prevVnode);\n      },\n      inserted() {\n\n      },\n      update() {\n\n      },\n      componentUpdated(el: HTMLElement, binding: any, vnode: any, prevVnode: any) {\n        console.log('----vue2-componentUpdated', el, binding, vnode, prevVnode);\n      },\n      unbind() {\n\n      }\n    }\n  }\n\n  translateVUE3() {\n    return {\n      // 在绑定元素的 attribute 前\n      // 或事件监听器应用前调用\n      created(el: any, binding: any, vnode: any, prevVnode: any) {\n        // 下面会介绍各个参数的细节\n      },\n      // 在元素被插入到 DOM 前调用\n      beforeMount(el: any, binding: any, vnode: any, prevVnode: any) { },\n      // 在绑定元素的父组件\n      // 及他自己的所有子节点都挂载完成后调用\n      mounted(el: any, binding: any, vnode: any, prevVnode: any) { },\n      // 绑定元素的父组件更新前调用\n      beforeUpdate(el: any, binding: any, vnode: any, prevVnode: any) { },\n      // 在绑定元素的父组件\n      // 及他自己的所有子节点都更新后调用\n      updated(el: any, binding: any, vnode: any, prevVnode: any) { },\n      // 绑定元素的父组件卸载前调用\n      beforeUnmount(el: any, binding: any, vnode: any, prevVnode: any) { },\n      // 绑定元素的父组件卸载后调用\n      unmounted(el: any, binding: any, vnode: any, prevVnode: any) { }\n    }\n  }\n\n}\n\n\nexport default {\n  install(app: any, options: TranslateConfigDefaultOption) {\n\n    const plugin = new TranslateVuePlugin(options)\n\n    const version = Number(app.version.split('.')[0])\n    if (version < 3) {\n      app.directive('translate', plugin.translateVUE2())\n      app.prototype.$translate = plugin.translateVUE2\n    } else {\n      app.directive('translate', plugin.translateVUE3())\n      app.config.globalProperties.$translate = plugin.translateVUE3\n    }\n  }\n}","import { TranslateEngine,TranslationLanguage} from './engine';\n\nimport TranslateVuePlugin from '../../platform/vue/index'\n\nconst Translate = {\n  TranslateEngine,\n  TranslateVuePlugin,\n  TranslationLanguage\n}\n\nexport default Translate"],"names":["http.request","HttpClient","TranslateVuePlugin"],"mappings":"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"}