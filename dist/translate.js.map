{"version":3,"file":"translate.js","sources":["../lib/core/engine.ts","../lib/http/nodeHttpAdpater.ts","../lib/http/adapter.ts","../lib/engines/deeplx.ts","../plugins/html/index.ts","../plugins/vue/index.ts","../lib/core/translate.ts"],"sourcesContent":["\nimport HttpClient, { HtptClientResponseOption, HttpClientInstance } from '../http/adapter'\n\n/**\n * 默认翻译语言配置\n */\nexport interface TranslateDefaultConfiguraOption {\n  src?: string\n  target?: string\n  languageMap?: Array<localMapItemInfo>\n}\n\n/**\n * 翻译配置\n */\nexport interface TranslateConfigOption extends TranslateDefaultConfiguraOption {\n  text?: string\n  id: string | number\n}\n\n/**\n * 翻译响应信息\n */\nexport interface TranslateResponseOption {\n  alternatives: Array<string> | null\n  data: string\n  id: string | number\n  success: Boolean\n}\n\n/**\n * 翻译引擎接口类\n */\nexport interface ITranslateEngine {\n  translate(options: TranslateConfigOption | Array<TranslateConfigOption>): Promise<TranslateResponseOption> | Promise<Array<TranslateResponseOption>>;\n  singleTranslate(options: TranslateConfigOption): Promise<TranslateResponseOption>\n  branchTranslate(options: Array<TranslateConfigOption>): Promise<Array<TranslateResponseOption>>\n}\n\nexport class TranslateEngineInstance implements ITranslateEngine {\n  private _engine: ITranslateEngine;\n\n  constructor(enine: ITranslateEngine) {\n    this._engine = enine\n  }\n\n  singleTranslate(options: TranslateConfigOption): Promise<TranslateResponseOption> {\n    return this._engine.singleTranslate(options)\n  }\n\n  branchTranslate(options: TranslateConfigOption[]): Promise<TranslateResponseOption[]> {\n    return this._engine.branchTranslate(options)\n  }\n\n  translate(options: TranslateConfigOption | TranslateConfigOption[]): Promise<TranslateResponseOption> | Promise<TranslateResponseOption[]> {\n    return this._engine.translate(options)\n  }\n\n}\n\n/**\n * 语言词典库——单项词典信息\n */\nexport interface localMapItemInfo {\n  src: string\n  srcText: string\n  target: string\n  targetText: string\n  weight?: number\n}\n\nexport class TranslateLocalMapping {\n\n  private _mapList: Array<localMapItemInfo>\n  private _map: { [name: string]: Array<localMapItemInfo> };\n\n  private _currentKey: string = ''\n  private _currentMap: Array<localMapItemInfo> = []\n\n  constructor(list: Array<localMapItemInfo>) {\n    this._mapList = list\n    this._map = this.initMap()\n  }\n\n  private initMap() {\n    const map: { [name: string]: Array<localMapItemInfo> } = {};\n\n    this._mapList.forEach(item => {\n      const key = this.getMappingKey(item.src, item.target);\n      const info = map[key] || [];\n      info.push(item);\n      map[key] = info\n    })\n    return map\n  }\n\n  get currentMapKey() {\n    return this._currentKey\n  }\n\n\n  /**\n   * 获取映射key\n   * @param src 源语言\n   * @param target 目标语言\n   * @returns \n   */\n  getMappingKey(src: string, target: string) {\n    if (!src) {\n      throw new Error('The mapping items srcource language connot be emptry!')\n    }\n\n    if (!target) {\n      throw new Error('The mapping items target language connot be emptry!')\n    }\n\n    return `${src}_${target}`\n  }\n\n  changeKey(src: string, target: string) {\n    return this.buildTargetMappingInfo(this.getMappingKey(src, target))\n  }\n\n  /**\n   * 根据key构建本地映射表\n   * @param key 映射标识 需要符合`getMapingKey`返回格式\n   * @returns \n   */\n  buildTargetMappingInfo(key: string) {\n\n    const map = (this._map[key] || []).sort((v1, v2) => {\n      const width1 = v1.weight == undefined ? 0 : v1.weight\n      const width2 = v2.weight == undefined ? 0 : v2.weight\n      return width2 - width1;\n    })\n\n    this._currentKey = key\n    this._currentMap = map\n    return this;\n  }\n\n  /**\n   * 根据本地语言映射表标记原始文本\n   * @param localLanguageMapInfo \n   * @param info \n   * @returns \n   */\n  encode(info: TranslateConfigOption, map?: Array<localMapItemInfo>): TranslateConfigOption {\n\n    info = JSON.parse(JSON.stringify(info));\n    let text = info.text || '';\n\n    (map || this._currentMap).forEach((map, index) => {\n      text = text.replace(map.srcText, '${' + index + '}')\n    })\n\n    info.text = text;\n    return info;\n  }\n\n\n  /**\n   * 根据本地语言映射表解析翻译结果\n   * @param key 映射标识\n   * @param responseText 翻译响应结果文本\n   * @returns \n   */\n  decode(responseText: string, map?: Array<localMapItemInfo>): string {\n    (map || this._currentMap).forEach((item, index) => {\n      responseText = responseText.replace('${' + index + '}', item.targetText)\n    })\n    return responseText;\n  }\n\n\n\n}\n\n","import * as http from 'http'\nimport { Buffer } from 'buffer';\nimport { HtptClientResponseOption, HttpClientRequestMethod, HttpClientRequestOption, IHttpAdapter } from './adapter';\n\nexport default class NodeHttpAdapter implements IHttpAdapter {\n\n  send<T>(options: HttpClientRequestOption): Promise<HtptClientResponseOption<T>> {\n    return new Promise<HtptClientResponseOption<T>>((resolve, reject) => {\n\n      if (!options.url) {\n        return reject({\n          mesage: 'The request url is empty'\n        })\n      }\n\n      if (!options.method) {\n        return reject({\n          mesage: 'The request method is empty'\n        })\n      }\n\n      const urlInfo = new URL(URL.canParse(options.url) ? options.url : window.location.origin + options.url);\n\n      const _options = Object.assign(options, {\n        hostname: urlInfo.hostname || window.location.hostname,\n        port: urlInfo.port || 80,\n        path: urlInfo.pathname + urlInfo.search || '',\n      })\n\n      delete _options.url;\n\n      //创建请求示例\n      const _h = http.request(\n        _options,\n        (res: any) => {\n          //设置响应编码\n          res.setEncoding('utf8');\n\n          //监听数据响应\n          let _data: any;\n          res.on('data', (chunk: any) => {\n\n            if (!_data) return _data = chunk;\n            _data instanceof Buffer ? (_data.includes(chunk)) : (_data += chunk)\n\n          })\n\n          //监听响应结束\n          res.on('end', () => {\n\n            if ((res.headers['content-type'] || '').indexOf('application/json') >= 0) _data = JSON.parse(_data.toString() || '')\n\n            resolve({\n              code: res.statusCode || 500,\n              message: res.statusMessage,\n              data: _data\n            })\n          })\n\n\n        }\n      );\n\n      //错误拦截\n      _h.on('error', (e: any) => {\n        reject({\n          message: e.message\n        })\n      })\n\n      //添加内容到body\n      if (options.method == HttpClientRequestMethod.POST) {\n        _h.write(JSON.stringify(options.data))\n      }\n\n      //设置超时时间\n      if (!Number.isInteger(options.timeout) || Number(options.timeout) > 0) {\n        _h.setTimeout(options.timeout || 60000, () => {\n          reject({\n            message: 'time out'\n          })\n        })\n      }\n\n\n      //结束写入\n      _h.end();\n\n    });\n  }\n\n}","import NodeHttpAdapter from './nodeHttpAdpater'\n\n/**\n * 请求方法\n */\nexport enum HttpClientRequestMethod {\n  GET = 'GET',\n  POST = 'POST'\n}\n\nexport interface HttpClientRequestDefaultOption {\n  timeout?: number\n}\n\n/**\n * 请求体配置属性\n */\nexport interface HttpClientRequestOption extends HttpClientRequestDefaultOption {\n  url?: string\n  method?: HttpClientRequestMethod | string\n  headers?: { [name: string]: string }\n  params?: any\n  data?: any\n}\n\n/**\n * 错误响应属性\n */\nexport interface HtptClientResponseError {\n  message?: string\n  code?: number | string\n}\n\n/**\n * 正常响应属性\n */\nexport interface HtptClientResponseOption<T> extends HtptClientResponseError {\n  data: T | null\n}\n\nexport interface IHttpAdapter {\n  send<T>(options: HttpClientRequestOption): Promise<HtptClientResponseOption<T>>\n}\n\n/**\n * 请求客户端接口\n */\ninterface IHttpClient {\n  get<T>(url: string, params?: any, options?: HttpClientRequestOption): Promise<HtptClientResponseOption<T>>\n  post<T>(url: string, data?: any, options?: HttpClientRequestOption): Promise<HtptClientResponseOption<T>>\n  request<T>(options: HttpClientRequestOption): Promise<HtptClientResponseOption<T>>\n\n}\n\nexport class HttpClientInstance implements IHttpClient {\n  private defaultOption: HttpClientRequestOption\n\n  constructor(options: HttpClientRequestOption) {\n    this.defaultOption = options\n  }\n\n  get<T>(url: string, params?: any, options?: HttpClientRequestOption | undefined): Promise<HtptClientResponseOption<T>> {\n    return this.request<T>(Object.assign(this.defaultOption, options, { url, method: HttpClientRequestMethod.GET, params }))\n  }\n\n  post<T>(url: string, data?: any, options?: HttpClientRequestOption | undefined): Promise<HtptClientResponseOption<T>> {\n    return this.request<T>(Object.assign(this.defaultOption, options, { url, method: HttpClientRequestMethod.POST, data }))\n  }\n\n  request<T>(options: HttpClientRequestOption): Promise<HtptClientResponseOption<T>> {\n    const adapter = new NodeHttpAdapter();\n    return adapter.send<T>(Object.assign(this.defaultOption, options))\n  }\n}\n\nexport class HttpClient {\n  static create(options: HttpClientRequestDefaultOption): HttpClientInstance {\n    return new HttpClientInstance(options)\n  }\n}\n\nexport default HttpClient","import { ITranslateEngine, localMapItemInfo, TranslateConfigOption, TranslateDefaultConfiguraOption, TranslateLocalMapping, TranslateResponseOption } from \"../core/engine\";\nimport { HttpClient, HttpClientInstance } from \"../http/adapter\";\n\nexport enum DeeplxLanguage {\n  ZH = 'ZH',\n  EN = 'EN'\n}\n\nexport interface DeeplxDefaultConfiguraOption extends TranslateDefaultConfiguraOption {\n  url: string\n  authorization: string\n  timeout?: number\n}\n\nexport class DeeplxTranslateEngine implements ITranslateEngine {\n\n  private src;\n  private target;\n  private languageMap;\n\n  private url;\n  private authorization;\n  private http: HttpClientInstance;\n\n  constructor(options: DeeplxDefaultConfiguraOption) {\n\n    if (!options.url) {\n      throw new Error('The deeplx translation address cannot be emptry')\n    }\n\n    if (!options.authorization) {\n      throw new Error('The deeplx request token cannot be emptry')\n    }\n\n\n    this.src = options.src || DeeplxLanguage.ZH\n    this.target = options.target || DeeplxLanguage.EN\n    this.languageMap = options.languageMap || {}\n\n    this.url = options.url;\n    this.authorization = options.authorization;\n    this.http = HttpClient.create({\n      timeout: options.timeout\n    })\n  }\n\n\n\n  /**\n   * 发送翻译请求\n   * @param text 需要翻译的文本\n   * @param src 源语言\n   * @param target 目标语言\n   * @returns \n   */\n  private requestTranslate(text: string, src: DeeplxLanguage | string, target: DeeplxLanguage | string) {\n    if (!src) {\n      throw new Error('The source language cannot be emptry')\n    }\n\n    if (!target) {\n      throw new Error('The target language cannot be emptry')\n    }\n\n    return this.http.post<TranslateResponseOption>(this.url,\n      {\n        \"text\": text,\n        \"source_lang\": src || this.src,\n        \"target_lang\": target || this.target\n      }, {\n      headers: {\n        'Authorization': this.authorization\n      }\n    })\n  }\n\n\n\n  /**\n   * 单个翻译\n   * @param options \n   */\n  singleTranslate(options: TranslateConfigOption): Promise<TranslateResponseOption> {\n    return new Promise((resolve, reject) => {\n\n      //是否是需要忽略翻译的文本\n      const ignore = options.text == null || options.text == undefined || options.text.length <= 0 || !Number.isNaN(Number(options.text))\n      if (ignore) {\n        return resolve({\n          alternatives: null,\n          data: options.text || '',\n          id: options.id,\n          success: false\n        })\n      }\n\n      const localMapControl = new TranslateLocalMapping((options.languageMap || this.languageMap || []) as Array<localMapItemInfo>)\n      const _options = localMapControl.changeKey(options.src || this.src, options.target || this.target).encode(options)\n\n      this.requestTranslate(_options.text || '', _options.src || '', _options.target || '').then((res) => {\n        resolve(res.code == 200 && res.data?.data ? {\n          alternatives: (res.data || {}).alternatives || null,\n          data: localMapControl.decode(res.data?.data || ''),\n          id: options.id || '',\n          success: true\n        } : {\n          alternatives: null,\n          data: options.text || '',\n          id: options.id || '',\n          success: false\n        }\n        )\n\n      })\n    })\n  }\n\n  /**\n   * 批量翻译\n   * @param options \n   */\n  branchTranslate(options: Array<TranslateConfigOption>): Promise<Array<TranslateResponseOption>> {\n\n    return new Promise((resolve, reject) => {\n\n      const requestList: Array<TranslateResponseOption> = []\n\n      Promise.all(options.map(info => this.singleTranslate(info))).then((res) => {\n        requestList.push(...res)\n      }).finally(() => {\n        resolve(requestList)\n      })\n\n    })\n\n  }\n\n\n  /**\n   * \n   * @param options Translation Configura Option\n   * @returns If options dont instance of array,or options length is one return `Pormise<TranslateResponseOption>`,\n   * otherwise return `Promise<Array<TranslateResponseOption>>` type\n   * \n   */\n  translate(options: TranslateConfigOption | Array<TranslateConfigOption>): Promise<TranslateResponseOption> | Promise<Array<TranslateResponseOption>> {\n    return !(options instanceof Array) ? this.singleTranslate(options) : options.length == 1 ? this.singleTranslate(options[0]) : this.branchTranslate(options)\n  }\n\n}","import { localMapItemInfo, TranslateConfigOption, TranslateDefaultConfiguraOption, TranslateEngineInstance } from \"../../lib/core/engine\";\nimport { PluginDefaultConfiguraOption } from \"../index\";\n\nexport interface HtmlPluginDefaultConfigOption extends PluginDefaultConfiguraOption {\n  el: string\n}\n\nexport class HtmlPlugin {\n  private _engine: TranslateEngineInstance;\n  private _el: HTMLElement\n\n  private _options: HtmlPluginDefaultConfigOption\n\n  constructor(options: HtmlPluginDefaultConfigOption) {\n    this._options = options\n    this._engine = new TranslateEngineInstance(options.engine)\n\n    this._el = this.el\n    this.watchDom()\n  }\n\n  get engine() {\n    return this._engine\n  }\n\n  get options() {\n    return this._options\n  }\n\n  get el() {\n    return (document.querySelector(this._options.el) || document.querySelector('body')) as HTMLElement\n  }\n\n  watchDom() {\n    if (this._el != document.querySelector('body')) {\n      var observer = new MutationObserver(() => {\n        this._el = this.el\n      });\n      observer.observe(document.querySelector('body') as Node, {\n        childList: true\n      });\n    }\n  }\n\n  translate(options: TranslateDefaultConfiguraOption) {\n\n    const textNodes: Array<any> = [];\n\n    this._el.querySelectorAll('*').forEach(node => {\n      node.childNodes.forEach(item => {\n        if (item.nodeName == '#text' && node.getAttribute('not-translate') != 'not-translate') {\n          textNodes.push(item)\n        }\n      })\n    });\n\n    const requestList: Array<TranslateConfigOption> = []\n\n    textNodes.map((node, i) => {\n      requestList.push({\n        id: `${i}`,\n        text: node.data,\n        src: options.src || '',\n        target: options.target || '',\n        languageMap: options.languageMap\n      })\n    })\n\n    this._engine.branchTranslate(requestList).then(res => {\n      res.forEach(info => {\n        textNodes[Number(info.id)].textContent = info.data\n      })\n    })\n  }\n}\n\nexport default {\n  create(options: HtmlPluginDefaultConfigOption) {\n    const plugin = new HtmlPlugin(options)\n\n    return plugin\n  }\n}","import { TranslateDefaultConfiguraOption, TranslateEngineInstance } from \"../../lib/core/engine\";\nimport TranslateHTMLPugin, { HtmlPlugin, HtmlPluginDefaultConfigOption } from \"../html/index\"\n\nexport interface VuePluginDefaultConfigOption extends HtmlPluginDefaultConfigOption {\n  global?: boolean\n}\n\nexport class VuePlugin {\n\n  private _plugin: HtmlPlugin\n\n  constructor(options: VuePluginDefaultConfigOption) {\n    this._plugin = TranslateHTMLPugin.create(options)\n  }\n\n  translate(options: TranslateDefaultConfiguraOption) {\n    this._plugin.translate(options)\n  }\n}\n\nexport function getDirectiveOptions() {\n\n  function setNotTranslateKey(el: HTMLElement) {\n    el.setAttribute('not-translate', 'not-translate')\n    el.querySelectorAll('*').forEach(node => {\n      if (node.getAttribute('not-translate') != 'not-translate') {\n        node.setAttribute('not-translate', 'not-translate')\n      }\n    })\n  }\n\n  return {\n    //v 2.0\n    bind(el: HTMLElement) {\n      setNotTranslateKey(el)\n    },\n    //v2.0\n    componentUpdated(el: HTMLElement) {\n      setNotTranslateKey(el)\n    }\n  }\n}\n\nexport default {\n  install(app: any, options: VuePluginDefaultConfigOption) {\n    const _p = this.create(options);\n\n    if (options.global != false) {\n      if (Number(app.version.split('.')[0]) < 3) {\n        app.prototype.$t = _p\n      } else {\n        app.config.globalProperties.$t = _p\n      }\n    }\n\n    app.directive('not-translate', getDirectiveOptions())\n  },\n  create(options: VuePluginDefaultConfigOption) {\n    return new VuePlugin(options)\n  }\n}","// this module should only have a default export\nimport { DeeplxTranslateEngine, DeeplxLanguage } from '../engines/index'\nimport { TranslateEngineInstance } from './engine'\n\nimport TranslateVuePlugin from '../../plugins/vue/index'\nimport TranslateHTMLPlugin from '../../plugins/html/index'\n\nexport default {\n  DeeplxTranslateEngine,\n  DeeplxLanguage,\n  TranslateVuePlugin,\n  TranslateHTMLPlugin,\n  TranslateEngineInstance\n}"],"names":["http.request","TranslateHTMLPugin"],"mappings":"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"}