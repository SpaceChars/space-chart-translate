{"version":3,"file":"translate.js","sources":["../lib/http/nodeHttpAdpater.ts","../lib/http/adapter.ts","../lib/engines/deeplx.ts","../lib/core/engine.ts","../lib/core/translate.ts"],"sourcesContent":["import * as http from 'http'\nimport { Buffer } from 'buffer';\nimport { HtptClientResponseOption, HttpClientRequestMethod, HttpClientRequestOption, IHttpAdapter } from './adapter';\n\nexport default class NodeHttpAdapter implements IHttpAdapter {\n\n  send<T>(options: HttpClientRequestOption): Promise<HtptClientResponseOption<T>> {\n    return new Promise<HtptClientResponseOption<T>>((resolve, reject) => {\n\n      if (!options.url) {\n        return reject({\n          mesage: 'The request url is empty'\n        })\n      }\n\n      if (!options.method) {\n        return reject({\n          mesage: 'The request method is empty'\n        })\n      }\n\n      const urlInfo = new URL(URL.canParse(options.url) ? options.url : window.location.origin + options.url);\n\n      const _options = Object.assign(options, {\n        hostname: urlInfo.hostname || window.location.hostname,\n        port: urlInfo.port || 80,\n        path: urlInfo.pathname + urlInfo.search || '',\n      })\n\n      delete _options.url;\n\n      //创建请求示例\n      const _h = http.request(\n        _options,\n        (res: any) => {\n          //设置响应编码\n          res.setEncoding('utf8');\n\n          //监听数据响应\n          let _data: any;\n          res.on('data', (chunk: any) => {\n\n            if (!_data) return _data = chunk;\n            _data instanceof Buffer ? (_data.includes(chunk)) : (_data += chunk)\n\n          })\n\n          //监听响应结束\n          res.on('end', () => {\n\n            if ((res.headers['content-type'] || '').indexOf('application/json') >= 0) _data = JSON.parse(_data.toString() || '')\n\n            resolve({\n              code: res.statusCode || 500,\n              message: res.statusMessage,\n              data: _data\n            })\n          })\n\n\n        }\n      );\n\n      //错误拦截\n      _h.on('error', (e: any) => {\n        reject({\n          message: e.message\n        })\n      })\n\n      //添加内容到body\n      if (options.method == HttpClientRequestMethod.POST) {\n        _h.write(JSON.stringify(options.data))\n      }\n\n      //设置超时时间\n      if (!Number.isInteger(options.timeout) || Number(options.timeout) > 0) {\n        _h.setTimeout(options.timeout || 60000, () => {\n          reject({\n            message: 'time out'\n          })\n        })\n      }\n\n\n      //结束写入\n      _h.end();\n\n    });\n  }\n\n}","import XHRAdapter from './xhrAdapter';\nimport NodeHttpAdapter from './nodeHttpAdpater'\n\n/**\n * 请求方法\n */\nexport enum HttpClientRequestMethod {\n  GET = 'GET',\n  POST = 'POST'\n}\n\nexport interface HttpClientRequestDefaultOption {\n  timeout?: number\n}\n\n/**\n * 请求体配置属性\n */\nexport interface HttpClientRequestOption extends HttpClientRequestDefaultOption {\n  url?: string\n  method?: HttpClientRequestMethod | string\n  headers?: { [name: string]: string }\n  params?: any\n  data?: any\n}\n\n/**\n * 错误响应属性\n */\nexport interface HtptClientResponseError {\n  message?: string\n  code?: number | string\n}\n\n/**\n * 正常响应属性\n */\nexport interface HtptClientResponseOption<T> extends HtptClientResponseError {\n  data: T | null\n}\n\nexport interface IHttpAdapter {\n  send<T>(options: HttpClientRequestOption): Promise<HtptClientResponseOption<T>>\n}\n\n/**\n * 请求客户端接口\n */\ninterface IHttpClient {\n  get<T>(url: string, params?: any, options?: HttpClientRequestOption): Promise<HtptClientResponseOption<T>>\n  post<T>(url: string, data?: any, options?: HttpClientRequestOption): Promise<HtptClientResponseOption<T>>\n  request<T>(options: HttpClientRequestOption): Promise<HtptClientResponseOption<T>>\n\n}\n\nexport class HttpClientInstance implements IHttpClient {\n  private defaultOption: HttpClientRequestOption\n\n  constructor(options: HttpClientRequestOption) {\n    this.defaultOption = options\n  }\n\n  get<T>(url: string, params?: any, options?: HttpClientRequestOption | undefined): Promise<HtptClientResponseOption<T>> {\n    return this.request<T>(Object.assign(this.defaultOption, options, { url, method: HttpClientRequestMethod.GET, params }))\n  }\n\n  post<T>(url: string, data?: any, options?: HttpClientRequestOption | undefined): Promise<HtptClientResponseOption<T>> {\n    return this.request<T>(Object.assign(this.defaultOption, options, { url, method: HttpClientRequestMethod.POST, data }))\n  }\n\n  request<T>(options: HttpClientRequestOption): Promise<HtptClientResponseOption<T>> {\n    // const adapter = typeof XMLHttpRequest !== 'undefined' ? new XHRAdapter() : new NodeHttpAdapter();\n    const adapter = new NodeHttpAdapter();\n    return adapter.send<T>(Object.assign(this.defaultOption, options))\n  }\n}\n\nexport class HttpClient {\n  static create(options: HttpClientRequestDefaultOption): HttpClientInstance {\n    return new HttpClientInstance(options)\n  }\n}\n\nexport default HttpClient","import { ITranslateEngine, LanguageMapItemInfo, TranslateConfigOption, TranslateDefaultConfiguraOption, TranslateResponseOption } from \"../core/engine\";\nimport { HttpClient, HttpClientInstance } from \"../http/adapter\";\n\nexport enum DeeplxLanguage {\n  ZH = 'ZH',\n  EN = 'EN'\n}\n\nexport interface DeeplxDefaultConfiguraOption extends TranslateDefaultConfiguraOption {\n  url: string\n  authorization: string\n  timeout?: number\n}\n\nexport class DeeplxTranslateEngine implements ITranslateEngine {\n\n  private src;\n  private target;\n  private languageMap;\n\n  private url;\n  private authorization;\n  private http: HttpClientInstance;\n\n  constructor(options: DeeplxDefaultConfiguraOption) {\n\n    if (!options.url) {\n      throw new Error('The deeplx translation address cannot be emptry')\n    }\n\n    if (!options.authorization) {\n      throw new Error('The deeplx request token cannot be emptry')\n    }\n\n    if (!options.src) {\n      throw new Error('The source language cannot be emptry')\n    }\n\n    if (!options.target) {\n      throw new Error('The target language cannot be emptry')\n    }\n\n    this.src = options.src || DeeplxLanguage.ZH\n    this.target = options.target || DeeplxLanguage.EN\n    this.languageMap = options.languageMap || {}\n\n    this.url = options.url;\n    this.authorization = options.authorization;\n    this.http = HttpClient.create({\n      timeout: options.timeout\n    })\n  }\n\n  /**\n   * 根据配置信息获取本地语言映射表映射标识\n   * @param options 配置信息\n   * @returns \n   */\n  private getLocalTranslateLanguageMapKeyByOption(options: TranslateConfigOption): string {\n    return `${options.src || this.src}-${options.target || this.target}`;\n  }\n\n  /**\n   * 根据key获取本地语言映射表信息\n   * @param key 映射标识 格式：[srcource language]-[target language]\n   * @returns \n   */\n  private getLocalTranslateLanguageMapInfoByKey(key: string): Array<LanguageMapItemInfo> {\n    return (this.languageMap[key] || []).sort((v1, v2) => {\n      const width1 = v1.weight == undefined ? 0 : v1.weight\n      const width2 = v2.weight == undefined ? 0 : v2.weight\n      return width2 - width1;\n    })\n  }\n\n  /**\n   * 发送翻译请求\n   * @param text 需要翻译的文本\n   * @param src 源语言\n   * @param target 目标语言\n   * @returns \n   */\n  private requestTranslate(text: string, src: DeeplxLanguage | string, target: DeeplxLanguage | string) {\n    return this.http.post<TranslateResponseOption>(this.url,\n      {\n        \"text\": text,\n        \"source_lang\": src || this.src,\n        \"target_lang\": target || this.target\n      }, {\n      headers: {\n        'Authorization': this.authorization\n      }\n    })\n  }\n\n  /**\n   * 根据本地语言映射表标记原始文本\n   * @param localLanguageMapInfo \n   * @param info \n   * @returns \n   */\n  encodeTranslateMapping(localLanguageMapInfo: Array<LanguageMapItemInfo>, info: TranslateConfigOption): TranslateConfigOption {\n\n    info = JSON.parse(JSON.stringify(info));\n    let text = info.text || '';\n\n    localLanguageMapInfo.forEach((map, index) => {\n      text = text.replace(map.src, '${' + index + '}')\n    })\n\n    info.text = text;\n    return info;\n  }\n\n\n  /**\n   * 根据本地语言映射表解析翻译结果\n   * @param key 映射标识\n   * @param responseText 翻译响应结果文本\n   * @returns \n   */\n  decodeTranslateMapping(localLanguageMapInfo: Array<LanguageMapItemInfo>, responseText: string): string {\n    localLanguageMapInfo.forEach((item, index) => {\n      responseText = responseText.replace('${' + index + '}', item.target)\n    })\n    return responseText;\n  }\n\n  /**\n   * 单个翻译\n   * @param options \n   */\n  singleTranslate(options: TranslateConfigOption): Promise<TranslateResponseOption> {\n    return new Promise((resolve, reject) => {\n\n      //是否是需要忽略翻译的文本\n      const ignore = options.text == null || options.text == undefined || options.text.length <= 0 || !Number.isNaN(Number(options.text))\n      if (ignore) {\n        return resolve({\n          alternatives: null,\n          data: options.text || '',\n          id: options.id,\n          success: false\n        })\n      }\n\n      const targetLanguageMapInfo = this.getLocalTranslateLanguageMapInfoByKey(this.getLocalTranslateLanguageMapKeyByOption(options))\n\n      const _options = this.encodeTranslateMapping(targetLanguageMapInfo, options)\n\n      this.requestTranslate(_options.text || '', _options.src, _options.target).then((res) => {\n        resolve(res.code == 200 && res.data?.data ? {\n          alternatives: (res.data || {}).alternatives || null,\n          data: this.decodeTranslateMapping(targetLanguageMapInfo, res.data?.data || ''),\n          id: options.id || '',\n          success: true\n        } : {\n          alternatives: null,\n          data: options.text || '',\n          id: options.id || '',\n          success: false\n        }\n        )\n\n      })\n    })\n  }\n\n  /**\n   * 批量翻译\n   * @param options \n   */\n  branchTranslate(options: Array<TranslateConfigOption>): Promise<Array<TranslateResponseOption>> {\n\n    return new Promise((resolve, reject) => {\n\n      const requestList: Array<TranslateResponseOption> = []\n\n      Promise.all(options.map(info => this.singleTranslate(info))).then((res) => {\n        requestList.push(...res)\n      }).finally(() => {\n        resolve(requestList)\n      })\n\n    })\n\n  }\n\n\n  /**\n   * \n   * @param options Translation Configura Option\n   * @returns If options dont instance of array,or options length is one return `Pormise<TranslateResponseOption>`,\n   * otherwise return `Promise<Array<TranslateResponseOption>>` type\n   * \n   */\n  translate(options: TranslateConfigOption | Array<TranslateConfigOption>): Promise<TranslateResponseOption> | Promise<Array<TranslateResponseOption>> {\n    return !(options instanceof Array) ? this.singleTranslate(options) : options.length == 1 ? this.singleTranslate(options[0]) : this.branchTranslate(options)\n  }\n\n}\n\nexport default {}","\nimport HttpClient, { HtptClientResponseOption, HttpClientInstance } from '../http/adapter'\n\n/**\n * 语言词典库——单项词典信息\n */\nexport interface LanguageMapItemInfo {\n  src: string\n  target: string\n  weight?: number\n}\n\n/**\n * 默认翻译语言配置\n */\nexport interface TranslateDefaultConfiguraOption {\n  src: string\n  target: string\n  languageMap?: { [name: string]: Array<LanguageMapItemInfo> }\n}\n\n/**\n * 翻译配置\n */\nexport interface TranslateConfigOption extends TranslateDefaultConfiguraOption {\n  text?: string\n  id: string | number\n}\n\n/**\n * 翻译响应信息\n */\nexport interface TranslateResponseOption {\n  alternatives: Array<string> | null\n  data: string\n  id: string | number\n  success: Boolean\n}\n\n/**\n * 翻译引擎接口类\n */\nexport interface ITranslateEngine {\n  translate(options: TranslateConfigOption | Array<TranslateConfigOption>): Promise<TranslateResponseOption> | Promise<Array<TranslateResponseOption>>;\n  singleTranslate(options: TranslateConfigOption): Promise<TranslateResponseOption>\n  branchTranslate(options: Array<TranslateConfigOption>): Promise<Array<TranslateResponseOption>>\n}\n\nexport class TranslateEngineInstance implements ITranslateEngine {\n  private _engine: ITranslateEngine;\n\n  constructor(enine: ITranslateEngine) {\n    this._engine = enine\n  }\n\n  singleTranslate(options: TranslateConfigOption): Promise<TranslateResponseOption> {\n    return this._engine.singleTranslate(options)\n  }\n  \n  branchTranslate(options: TranslateConfigOption[]): Promise<TranslateResponseOption[]> {\n    return this._engine.branchTranslate(options)\n  }\n\n  translate(options: TranslateConfigOption | TranslateConfigOption[]): Promise<TranslateResponseOption> | Promise<TranslateResponseOption[]> {\n    return this._engine.translate(options)\n  }\n\n}","// this module should only have a default export\nimport { DeeplxTranslateEngine, DeeplxLanguage } from '../engines/index'\nimport {TranslateEngineInstance} from './engine'\n\nexport default {\n  DeeplxTranslateEngine,\n  DeeplxLanguage,\n  TranslateEngineInstance\n}"],"names":["http.request"],"mappingsc,MAAO,eAAe,CAAA;EAElC,IAAA,IAAI,CAAI,OAAgC,EAAA;UACtC,OAAO,IAAI,OAAO,CAA8B,CAAC,OAAO,EAAE,MAAM,KAAI;EAElE,YAAA,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE;EAChB,gBAAA,OAAO,MAAM,CAAC;EACZ,oBAAA,MAAM,EAAE,0BAA0B;EACnC,iBAAA,CAAC,CAAA;eACH;EAED,YAAA,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;EACnB,gBAAA,OAAO,MAAM,CAAC;EACZ,oBAAA,MAAM,EAAE,6BAA6B;EACtC,iBAAA,CAAC,CAAA;eACH;EAED,YAAA,MAAM,OAAO,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,GAAG,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC;EAExG,YAAA,MAAM,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE;kBACtC,QAAQ,EAAE,OAAO,CAAC,QAAQ,IAAI,MAAM,CAAC,QAAQ,CAAC,QAAQ;EACtD,gBAAA,IAAI,EAAE,OAAO,CAAC,IAAI,IAAI,EAAE;kBACxB,IAAI,EAAE,OAAO,CAAC,QAAQ,GAAG,OAAO,CAAC,MAAM,IAAI,EAAE;EAC9C,aAAA,CAAC,CAAA;cAEF,OAAO,QAAQ,CAAC,GAAG,CAAC;;cAGpB,MAAM,EAAE,GAAGA,OAAY,CACrB,QAAQ,EACR,CAAC,GAAQ,KAAI;;EAEX,gBAAA,GAAG,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;;EAGxB,gBAAA,IAAI,KAAU,CAAC;kBACf,GAAG,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,KAAU,KAAI;EAE5B,oBAAA,IAAI,CAAC,KAAK;0BAAE,OAAO,KAAK,GAAG,KAAK,CAAC;sBACjC,KAAK,YAAY,MAAM,IAAI,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,KAAK,IAAI,KAAK,CAAC,CAAA;EAEtE,iBAAC,CAAC,CAAA;;EAGF,gBAAA,GAAG,CAAC,EAAE,CAAC,KAAK,EAAE,MAAK;EAEjB,oBAAA,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI,EAAE,EAAE,OAAO,CAAC,kBAAkB,CAAC,IAAI,CAAC;EAAE,wBAAA,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAA;EAEpH,oBAAA,OAAO,CAAC;EACN,wBAAA,IAAI,EAAE,GAAG,CAAC,UAAU,IAAI,GAAG;0BAC3B,OAAO,EAAE,GAAG,CAAC,aAAa;EAC1B,wBAAA,IAAI,EAAE,KAAK;EACZ,qBAAA,CAAC,CAAA;EACJ,iBAAC,CAAC,CAAA;EAGJ,aAAC,CACF,CAAC;;cAGF,EAAE,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,CAAM,KAAI;EACxB,gBAAA,MAAM,CAAC;sBACL,OAAO,EAAE,CAAC,CAAC,OAAO;EACnB,iBAAA,CAAC,CAAA;EACJ,aAAC,CAAC,CAAA;;cAGF,IAAI,OAAO,CAAC,MAAM,IAAI,uBAAuB,CAAC,IAAI,EAAE;EAClD,gBAAA,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAA;eACvC;;EAGD,YAAA,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;kBACrE,EAAE,CAAC,UAAU,CAAC,OAAO,CAAC,OAAO,IAAI,KAAK,EAAE,MAAK;EAC3C,oBAAA,MAAM,CAAC;EACL,wBAAA,OAAO,EAAE,UAAU;EACpB,qBAAA,CAAC,CAAA;EACJ,iBAAC,CAAC,CAAA;eACH;;cAID,EAAE,CAAC,GAAG,EAAE,CAAC;EAEX,SAAC,CAAC,CAAC;OACJ;EAEF;;ECxFD;;EAEG;EACH,IAAY,uBAGX,CAAA;EAHD,CAAA,UAAY,uBAAuB,EAAA;EACjC,IAAA,uBAAA,CAAA,KAAA,CAAA,GAAA,KAAW,CAAA;EACX,IAAA,uBAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;EACf,CAAC,EAHW,uBAAuB,KAAvB,uBAAuB,GAGlC,EAAA,CAAA,CAAA,CAAA;QA8CY,kBAAkB,CAAA;EAG7B,IAAA,WAAA,CAAY,OAAgC,EAAA;EAC1C,QAAA,IAAI,CAAC,aAAa,GAAG,OAAO,CAAA;OAC7B;EAED,IAAA,GAAG,CAAI,GAAW,EAAE,MAAY,EAAE,OAA6C,EAAA;UAC7E,OAAO,IAAI,CAAC,OAAO,CAAI,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,EAAE,OAAO,EAAE,EAAE,GAAG,EAAE,MAAM,EAAE,uBAAuB,CAAC,GAAG,EAAE,MAAM,EAAE,CAAC,CAAC,CAAA;OACzH;EAED,IAAA,IAAI,CAAI,GAAW,EAAE,IAAU,EAAE,OAA6C,EAAA;UAC5E,OAAO,IAAI,CAAC,OAAO,CAAI,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,EAAE,OAAO,EAAE,EAAE,GAAG,EAAE,MAAM,EAAE,uBAAuB,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAA;OACxH;EAED,IAAA,OAAO,CAAI,OAAgC,EAAA;;EAEzC,QAAA,MAAM,OAAO,GAAG,IAAI,eAAe,EAAE,CAAC;EACtC,QAAA,OAAO,OAAO,CAAC,IAAI,CAAI,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,EAAE,OAAO,CAAC,CAAC,CAAA;OACnE;EACF,CAAA;QAEY,UAAU,CAAA;MACrB,OAAO,MAAM,CAAC,OAAuC,EAAA;EACnD,QAAA,OAAO,IAAI,kBAAkB,CAAC,OAAO,CAAC,CAAA;OACvC;EACF;;EC9ED,IAAY,cAGX,CAAA;EAHD,CAAA,UAAY,cAAc,EAAA;EACxB,IAAA,cAAA,CAAA,IAAA,CAAA,GAAA,IAAS,CAAA;EACT,IAAA,cAAA,CAAA,IAAA,CAAA,GAAA,IAAS,CAAA;EACX,CAAC,EAHW,cAAc,KAAd,cAAc,GAGzB,EAAA,CAAA,CAAA,CAAA;QAQY,qBAAqB,CAAA;EAUhC,IAAA,WAAA,CAAY,OAAqC,EAAA;EAE/C,QAAA,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE;EAChB,YAAA,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAA;WACnE;EAED,QAAA,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE;EAC1B,YAAA,MAAM,IAAI,KAAK,CAAC,2CAA2C,CAAC,CAAA;WAC7D;EAED,QAAA,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE;EAChB,YAAA,MAAM,IAAI,KAAK,CAAC,sCAAsC,CAAC,CAAA;WACxD;EAED,QAAA,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;EACnB,YAAA,MAAM,IAAI,KAAK,CAAC,sCAAsC,CAAC,CAAA;WACxD;UAED,IAAI,CAAC,GAAG,GAAG,OAAO,CAAC,GAAG,IAAI,cAAc,CAAC,EAAE,CAAA;UAC3C,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,IAAI,cAAc,CAAC,EAAE,CAAA;UACjD,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,WAAW,IAAI,EAAE,CAAA;EAE5C,QAAA,IAAI,CAAC,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC;EACvB,QAAA,IAAI,CAAC,aAAa,GAAG,OAAO,CAAC,aAAa,CAAC;EAC3C,QAAA,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC,MAAM,CAAC;cAC5B,OAAO,EAAE,OAAO,CAAC,OAAO;EACzB,SAAA,CAAC,CAAA;OACH;EAED;;;;EAIG;EACK,IAAA,uCAAuC,CAAC,OAA8B,EAAA;EAC5E,QAAA,OAAO,GAAG,OAAO,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG,CAAI,CAAA,EAAA,OAAO,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC;OACtE;EAED;;;;EAIG;EACK,IAAA,qCAAqC,CAAC,GAAW,EAAA;EACvD,QAAA,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,KAAI;EACnD,YAAA,MAAM,MAAM,GAAG,EAAE,CAAC,MAAM,IAAI,SAAS,GAAG,CAAC,GAAG,EAAE,CAAC,MAAM,CAAA;EACrD,YAAA,MAAM,MAAM,GAAG,EAAE,CAAC,MAAM,IAAI,SAAS,GAAG,CAAC,GAAG,EAAE,CAAC,MAAM,CAAA;cACrD,OAAO,MAAM,GAAG,MAAM,CAAC;EACzB,SAAC,CAAC,CAAA;OACH;EAED;;;;;;EAMG;EACK,IAAA,gBAAgB,CAAC,IAAY,EAAE,GAA4B,EAAE,MAA+B,EAAA;UAClG,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAA0B,IAAI,CAAC,GAAG,EACrD;EACE,YAAA,MAAM,EAAE,IAAI;EACZ,YAAA,aAAa,EAAE,GAAG,IAAI,IAAI,CAAC,GAAG;EAC9B,YAAA,aAAa,EAAE,MAAM,IAAI,IAAI,CAAC,MAAM;WACrC,EAAE;EACH,YAAA,OAAO,EAAE;kBACP,eAAe,EAAE,IAAI,CAAC,aAAa;EACpC,aAAA;EACF,SAAA,CAAC,CAAA;OACH;EAED;;;;;EAKG;MACH,sBAAsB,CAAC,oBAAgD,EAAE,IAA2B,EAAA;EAElG,QAAA,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;EACxC,QAAA,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC;UAE3B,oBAAoB,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,KAAK,KAAI;EAC1C,YAAA,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,GAAG,KAAK,GAAG,GAAG,CAAC,CAAA;EAClD,SAAC,CAAC,CAAA;EAEF,QAAA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;EACjB,QAAA,OAAO,IAAI,CAAC;OACb;EAGD;;;;;EAKG;MACH,sBAAsB,CAAC,oBAAgD,EAAE,YAAoB,EAAA;UAC3F,oBAAoB,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,KAAK,KAAI;EAC3C,YAAA,YAAY,GAAG,YAAY,CAAC,OAAO,CAAC,IAAI,GAAG,KAAK,GAAG,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,CAAA;EACtE,SAAC,CAAC,CAAA;EACF,QAAA,OAAO,YAAY,CAAC;OACrB;EAED;;;EAGG;EACH,IAAA,eAAe,CAAC,OAA8B,EAAA;UAC5C,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,KAAI;;EAGrC,YAAA,MAAM,MAAM,GAAG,OAAO,CAAC,IAAI,IAAI,IAAI,IAAI,OAAO,CAAC,IAAI,IAAI,SAAS,IAAI,OAAO,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAA;cACnI,IAAI,MAAM,EAAE;EACV,gBAAA,OAAO,OAAO,CAAC;EACb,oBAAA,YAAY,EAAE,IAAI;EAClB,oBAAA,IAAI,EAAE,OAAO,CAAC,IAAI,IAAI,EAAE;sBACxB,EAAE,EAAE,OAAO,CAAC,EAAE;EACd,oBAAA,OAAO,EAAE,KAAK;EACf,iBAAA,CAAC,CAAA;eACH;EAED,YAAA,MAAM,qBAAqB,GAAG,IAAI,CAAC,qCAAqC,CAAC,IAAI,CAAC,uCAAuC,CAAC,OAAO,CAAC,CAAC,CAAA;cAE/H,MAAM,QAAQ,GAAG,IAAI,CAAC,sBAAsB,CAAC,qBAAqB,EAAE,OAAO,CAAC,CAAA;cAE5E,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,IAAI,IAAI,EAAE,EAAE,QAAQ,CAAC,GAAG,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,KAAI;;EACrF,gBAAA,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,GAAG,KAAI,CAAA,EAAA,GAAA,GAAG,CAAC,IAAI,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,IAAI,CAAA,GAAG;sBAC1C,YAAY,EAAE,CAAC,GAAG,CAAC,IAAI,IAAI,EAAE,EAAE,YAAY,IAAI,IAAI;EACnD,oBAAA,IAAI,EAAE,IAAI,CAAC,sBAAsB,CAAC,qBAAqB,EAAE,CAAA,CAAA,EAAA,GAAA,GAAG,CAAC,IAAI,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,IAAI,KAAI,EAAE,CAAC;EAC9E,oBAAA,EAAE,EAAE,OAAO,CAAC,EAAE,IAAI,EAAE;EACpB,oBAAA,OAAO,EAAE,IAAI;EACd,iBAAA,GAAG;EACF,oBAAA,YAAY,EAAE,IAAI;EAClB,oBAAA,IAAI,EAAE,OAAO,CAAC,IAAI,IAAI,EAAE;EACxB,oBAAA,EAAE,EAAE,OAAO,CAAC,EAAE,IAAI,EAAE;EACpB,oBAAA,OAAO,EAAE,KAAK;EACf,iBAAA,CACA,CAAA;EAEH,aAAC,CAAC,CAAA;EACJ,SAAC,CAAC,CAAA;OACH;EAED;;;EAGG;EACH,IAAA,eAAe,CAAC,OAAqC,EAAA;UAEnD,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,KAAI;cAErC,MAAM,WAAW,GAAmC,EAAE,CAAA;cAEtD,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,KAAI;EACxE,gBAAA,WAAW,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,CAAA;EAC1B,aAAC,CAAC,CAAC,OAAO,CAAC,MAAK;kBACd,OAAO,CAAC,WAAW,CAAC,CAAA;EACtB,aAAC,CAAC,CAAA;EAEJ,SAAC,CAAC,CAAA;OAEH;EAGD;;;;;;EAMG;EACH,IAAA,SAAS,CAAC,OAA6D,EAAA;UACrE,OAAO,EAAE,OAAO,YAAY,KAAK,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,GAAG,OAAO,CAAC,MAAM,IAAI,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAA;OAC5J;EAEF;;QCxJY,uBAAuB,CAAA;EAGlC,IAAA,WAAA,CAAY,KAAuB,EAAA;EACjC,QAAA,IAAI,CAAC,OAAO,GAAG,KAAK,CAAA;OACrB;EAED,IAAA,eAAe,CAAC,OAA8B,EAAA;UAC5C,OAAO,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,OAAO,CAAC,CAAA;OAC7C;EAED,IAAA,eAAe,CAAC,OAAgC,EAAA;UAC9C,OAAO,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,OAAO,CAAC,CAAA;OAC7C;EAED,IAAA,SAAS,CAAC,OAAwD,EAAA;UAChE,OAAO,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,OAAO,CAAC,CAAA;OACvC;EAEF;;ECnED;AAIA,kBAAe;MACb,qBAAqB;MACrB,cAAc;MACd,uBAAuB;GACxB;;;;;;;;"}