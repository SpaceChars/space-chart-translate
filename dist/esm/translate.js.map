{"version":3,"file":"translate.js","sources":["../../lib/http/xhrAdapter.ts","../../lib/http/nodeHttpAdpater.ts","../../lib/http/adapter.ts","../../lib/core/engine.ts","../../platform/vue/index.ts","../../lib/core/translate.ts","../../index.ts"],"sourcesContent":["import { HtptClientResponseOption, HttpClientRequestOption, IHttpAdapter } from \"./adapter\";\n\nexport default class XHRAdapter implements IHttpAdapter {\n\n  send<T>(options: HttpClientRequestOption): Promise<HtptClientResponseOption<T>> {\n    return new Promise<HtptClientResponseOption<T>>((resolve, reject) => {\n      reject({})\n    })\n  }\n\n}","import * as http from 'http'\nimport { Buffer } from 'buffer';\nimport { HtptClientResponseOption, HttpClientRequestMethod, HttpClientRequestOption, IHttpAdapter } from './adapter';\n\nexport default class NodeHttpAdapter implements IHttpAdapter {\n\n  send<T>(options: HttpClientRequestOption): Promise<HtptClientResponseOption<T>> {\n    return new Promise<HtptClientResponseOption<T>>((resolve, reject) => {\n\n      if (!options.url) {\n        return reject({\n          mesage: 'The request url is empty'\n        })\n      }\n\n      if (!options.method) {\n        return reject({\n          mesage: 'The request method is empty'\n        })\n      }\n\n      const urlInfo = new URL(options.url);\n\n      const _options = Object.assign(options, {\n        hostname: urlInfo.hostname || window.location.hostname || '127.0.0.1',\n        port: urlInfo.port || 80,\n        path: urlInfo.pathname + urlInfo.search || ''\n      })\n\n      delete _options.url;\n\n      //创建请求示例\n      const _h = http.request(\n        _options,\n        (res: any) => {\n          //设置响应编码\n          res.setEncoding('utf8');\n\n          //监听数据响应\n          let _data: any;\n          res.on('data', (chunk: any) => {\n\n            if (!_data) return _data = chunk;\n            _data instanceof Buffer ? (_data.includes(chunk)) : (_data += chunk)\n\n          })\n\n          //监听响应结束\n          res.on('end', () => {\n\n            if ((res.headers['content-type'] || '').indexOf('application/json') >= 0) _data = JSON.parse(_data.toString() || '')\n\n            resolve({\n              code: res.statusCode || 500,\n              message: res.statusMessage,\n              data: _data\n            })\n          })\n\n\n        }\n      );\n\n      //错误拦截\n      _h.on('error', (e: any) => {\n        reject({\n          message: e.message\n        })\n      })\n\n      //添加内容到body\n      if (options.method == HttpClientRequestMethod.POST) {\n        _h.write(JSON.stringify(options.data))\n      }\n\n      //设置超时时间\n      if (!Number.isInteger(options.timeout) || Number(options.timeout) > 0) {\n        _h.setTimeout(options.timeout || 60000, () => {\n          reject({\n            message: 'time out'\n          })\n        })\n      }\n\n\n      //结束写入\n      _h.end();\n\n    });\n  }\n\n}","import XHRAdapter from './xhrAdapter';\nimport NodeHttpAdapter from './nodeHttpAdpater'\n\n/**\n * 请求方法\n */\nexport enum HttpClientRequestMethod {\n  GET = 'get',\n  POST = 'post'\n}\n\nexport interface HttpClientRequestDefaultOption {\n  timeout?: number\n}\n\n/**\n * 请求体配置属性\n */\nexport interface HttpClientRequestOption extends HttpClientRequestDefaultOption {\n  url?: string\n  method?: HttpClientRequestMethod | string\n  headers?: { [name: string]: string }\n  params?: any\n  data?: any\n}\n\n/**\n * 错误响应属性\n */\nexport interface HtptClientResponseError {\n  message?: string\n  code?: number | string\n}\n\n/**\n * 正常响应属性\n */\nexport interface HtptClientResponseOption<T> extends HtptClientResponseError {\n  data: T | null\n}\n\nexport interface IHttpAdapter {\n  send<T>(options: HttpClientRequestOption): Promise<HtptClientResponseOption<T>>\n}\n\n/**\n * 请求客户端接口\n */\ninterface IHttpClient {\n  get<T>(url: string, params?: any, options?: HttpClientRequestOption): Promise<HtptClientResponseOption<T>>\n  post<T>(url: string, data?: any, options?: HttpClientRequestOption): Promise<HtptClientResponseOption<T>>\n  request<T>(options: HttpClientRequestOption): Promise<HtptClientResponseOption<T>>\n\n}\n\nexport class HttpClientInstance implements IHttpClient {\n  private defaultOption: HttpClientRequestOption\n\n  constructor(options: HttpClientRequestOption) {\n    this.defaultOption = options\n  }\n\n  get<T>(url: string, params?: any, options?: HttpClientRequestOption | undefined): Promise<HtptClientResponseOption<T>> {\n    return this.request<T>(Object.assign(this.defaultOption, options, { url, method: HttpClientRequestMethod.GET, params }))\n  }\n\n  post<T>(url: string, data?: any, options?: HttpClientRequestOption | undefined): Promise<HtptClientResponseOption<T>> {\n    return this.request<T>(Object.assign(this.defaultOption, options, { url, method: HttpClientRequestMethod.POST, data }))\n  }\n\n  request<T>(options: HttpClientRequestOption): Promise<HtptClientResponseOption<T>> {\n    const adapter = typeof window.XMLHttpRequest !== 'undefined' ? new XHRAdapter() : new NodeHttpAdapter();\n    return adapter.send<T>(Object.assign(this.defaultOption, options))\n  }\n}\n\nexport class HttpClient {\n  create(options: HttpClientRequestDefaultOption): HttpClientInstance {\n    return new HttpClientInstance(options)\n  }\n}\n\nexport default new HttpClient()","\nimport HttpClient, { HtptClientResponseOption, HttpClientInstance } from '../http/adapter'\n\n/**\n * 翻译语言\n */\nexport enum TranslateLang {\n  ZH = 'ZH',\n  EN = 'EN',\n}\n\n/**\n * 语言词典库——单项词典信息\n */\nexport interface LangMapItemInfo {\n  src: string\n  target: string\n  weight?: number\n}\n\n/**\n * 默认翻译语言配置\n */\nexport interface TranslateConfigLangDefaultOption {\n  src: TranslateLang | string\n  target: TranslateLang | string\n  langMap?: { [name: TranslateLang | string]: Array<LangMapItemInfo> }\n}\n\nexport interface TranslateConfigDefaultOption extends TranslateConfigLangDefaultOption {\n  host: string\n  timeout?: number\n}\n\n/**\n * 翻译配置\n */\nexport interface TranslateConfigOption extends TranslateConfigLangDefaultOption {\n  text?: string\n  id: string | number\n}\n\n/**\n * 翻译响应信息\n */\nexport interface TranslateResponseOption {\n  alternatives: Array<string> | null\n  data: string\n  id: string | number\n  success: Boolean\n}\n\n/**\n * 翻译引擎接口类\n */\nexport interface ITranslateEngine {\n  translate(options: TranslateConfigOption | Array<TranslateConfigOption>): Promise<Array<HtptClientResponseOption<TranslateResponseOption>>>;\n}\n\n/**\n * 翻译引擎\n */\nexport class TranslateEngine implements ITranslateEngine {\n\n  private src;\n  private target;\n  private langMap;\n\n  private host;\n  private http: HttpClientInstance;\n\n  constructor(options: TranslateConfigDefaultOption) {\n\n    if (!options.host) {\n      throw new Error('The deeplx host address cannot be emptry')\n    }\n\n    this.src = options.src || TranslateLang.ZH\n    this.target = options.target || TranslateLang.EN\n    this.langMap = options.langMap || {}\n\n    this.host = options.host;\n    this.http = HttpClient.create({\n      timeout: options.timeout\n    })\n  }\n\n  /**\n   * 映射本地语言表\n   * @param targetLang \n   * @param info \n   * @returns \n   */\n  translateMapping(targetLangMapInfo: Array<LangMapItemInfo>, info: TranslateConfigOption): TranslateConfigOption {\n\n    //深拷贝，避免数据影响\n    info = JSON.parse(JSON.stringify(info));\n\n    let text = info.text || '';\n    targetLangMapInfo.forEach((map, index) => {\n      text = text.replace(map.src, '${' + index + '}')\n    })\n    info.text = text;\n\n    return info;\n  }\n\n\n  /**\n   * 翻译\n   * @param options \n   * @returns \n   */\n  translate(options: TranslateConfigOption | Array<TranslateConfigOption>) {\n\n    if (!(options instanceof Array)) {\n      options = [options]\n    }\n\n    // 按源语言和目标语言进行分组\n    const translateGroup: { [name: string]: Array<TranslateConfigOption> } = {};\n    options.forEach((option, index) => {\n\n      const key = `${option.src || this.src}-${option.target || this.target}`;\n      const info: Array<TranslateConfigOption> = translateGroup[key] || [];\n      info.push(option)\n      translateGroup[key] = info;\n\n    })\n\n    //按照翻译分组分别进行翻译\n    return Promise.all(Object.keys(translateGroup).map(key => {\n\n      const lang = key.split('-');\n\n      //获取目标语言中的本地语言映射表，并根据\n      const targetLangMapInfo = (this.langMap[key] || []).sort((v1, v2) => {\n        const width1 = v1.weight == undefined ? 0 : v1.weight\n        const width2 = v2.weight == undefined ? 0 : v2.weight\n        return width2 - width1;\n      })\n\n      //标记后的数据\n      const group = translateGroup[key].map(item => this.translateMapping(targetLangMapInfo, item))\n\n      let translateSrcText = JSON.stringify(group.map(item => item.text));\n\n      return this.http.post<TranslateResponseOption>(this.host + '/translate',\n        {\n          \"text\": translateSrcText,\n          \"source_lang\": lang[0],\n          \"target_lang\": lang[1]\n        }, {\n        headers: {\n          'Authorization': 'Bearer deeplx'\n        }\n      }).then((res) => {\n\n        if (res.code == 200) {\n          //如果翻译成功，则替换对应目标变量\n\n          res.data = JSON.parse(res.data?.data || '[]').map((v: string, i: number) => {\n            const info = group[i];\n            targetLangMapInfo.forEach((item, index) => {\n              v = v.replace('${' + index + '}', item.target)\n            })\n            return {\n              alternatives: (res.data || {}).alternatives || null,\n              data: v,\n              id: info.id,\n              success: true\n            }\n          })\n        } else {\n          // 如果翻译失败，则返回原数据\n          res.data = translateGroup[key].map(info => {\n            return {\n              alternatives: null,\n              data: info.text,\n              id: info.id,\n              success: false\n            }\n          }) as any\n        }\n\n        return res\n      })\n    }))\n\n\n  }\n\n}\n\nexport default TranslateEngine","import { TranslateEngine, TranslateConfigDefaultOption, TranslateLang } from '../../lib/core/engine';\n\nclass TranslateVuePlugin {\n\n  private engine: TranslateEngine\n\n  constructor(options: TranslateConfigDefaultOption) {\n    this.engine = new TranslateEngine(options)\n  }\n\n  translateVUE2() {\n    return {\n      bind(el: any, binding: any, vnode: any, prevVnode: any) {\n        console.log('----vue2-bind', el, binding, vnode, prevVnode);\n      },\n      inserted() {\n\n      },\n      update() {\n\n      },\n      componentUpdated() {\n\n      },\n      unbind() {\n\n      }\n    }\n  }\n\n  translateVUE3() {\n    return {\n      // 在绑定元素的 attribute 前\n      // 或事件监听器应用前调用\n      created(el: any, binding: any, vnode: any, prevVnode: any) {\n        // 下面会介绍各个参数的细节\n      },\n      // 在元素被插入到 DOM 前调用\n      beforeMount(el: any, binding: any, vnode: any, prevVnode: any) { },\n      // 在绑定元素的父组件\n      // 及他自己的所有子节点都挂载完成后调用\n      mounted(el: any, binding: any, vnode: any, prevVnode: any) { },\n      // 绑定元素的父组件更新前调用\n      beforeUpdate(el: any, binding: any, vnode: any, prevVnode: any) { },\n      // 在绑定元素的父组件\n      // 及他自己的所有子节点都更新后调用\n      updated(el: any, binding: any, vnode: any, prevVnode: any) { },\n      // 绑定元素的父组件卸载前调用\n      beforeUnmount(el: any, binding: any, vnode: any, prevVnode: any) { },\n      // 绑定元素的父组件卸载后调用\n      unmounted(el: any, binding: any, vnode: any, prevVnode: any) { }\n    }\n  }\n\n}\n\n\nexport default {\n  install(app: any, options: TranslateConfigDefaultOption) {\n\n    const plugin = new TranslateVuePlugin(options)\n\n    const version = Number(app.version.split('.')[0])\n    if (version < 3) {\n      app.directive('translate', plugin.translateVUE2())\n      app.prototype.$translate = plugin.translateVUE2\n    } else {\n      app.directive('translate', plugin.translateVUE3())\n      app.config.globalProperties.$translate = plugin.translateVUE3\n    }\n  }\n}","import { TranslateEngine } from './engine';\n\nimport TranslateVuePlugin from '../../platform/vue/index'\n\nconst Translate = {\n  TranslateEngine,\n  TranslateVuePlugin\n}\n\nexport default Translate","\nimport Translate from './lib/core/translate'\n\nconst { TranslateEngine, TranslateVuePlugin } = Translate\nexport {\n  Translate as default,\n  TranslateEngine,\n  TranslateVuePlugin\n}"],"names":["http.request","TranslateEngine","HttpClient","TranslateVuePlugin"],"mappings":";AAEA,IAAA,UAAA,kBAAA,YAAA;AAAA,IAAA,SAAA,UAAA,GAAA;KAQC;IANC,UAAI,CAAA,SAAA,CAAA,IAAA,GAAJ,UAAQ,OAAgC,EAAA;AACtC,QAAA,OAAO,IAAI,OAAO,CAA8B,UAAC,OAAO,EAAE,MAAM,EAAA;YAC9D,MAAM,CAAC,EAAE,CAAC,CAAA;AACZ,SAAC,CAAC,CAAA;KACH,CAAA;IAEH,OAAC,UAAA,CAAA;AAAD,CAAC,EAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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"}